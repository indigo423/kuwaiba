/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.neotropic;

import java.awt.List;
import java.awt.Point;
import java.awt.Rectangle;
import java.util.ArrayList;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.api.visual.layout.LayoutFactory;
import org.netbeans.api.visual.widget.Widget;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.neotropic//Rotate//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "RotateTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "com.neotropic.RotateTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_RotateAction",
        preferredID = "RotateTopComponent"
)
@Messages({
    "CTL_RotateAction=Rotate",
    "CTL_RotateTopComponent=Rotate Window",
    "HINT_RotateTopComponent=This is a Rotate window"
})
public final class RotateTopComponent extends TopComponent {
    private final RotateScene scene = new RotateScene();
    
    public RotateTopComponent() {
        initComponents();
        setName(Bundle.CTL_RotateTopComponent());
        setToolTipText(Bundle.HINT_RotateTopComponent());
        
        associateLookup(scene.getLookup());
        //scene.setLayout(LayoutFactory.createAbsoluteLayout());
        pnlRotate.setViewportView(scene.createView());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlRotate = new javax.swing.JScrollPane();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());
        add(pnlRotate, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(RotateTopComponent.class, "RotateTopComponent.jButton1.text")); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jButton1.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(RotateTopComponent.class, "RotateTopComponent.jButton1.AccessibleContext.accessibleName")); // NOI18N

        add(jToolBar1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        for (RectangleRotater rr : scene.getNodes()) {
            Widget widget = scene.findWidget(rr);
            if (widget instanceof ResizableLabelWidget)
                ((ResizableLabelWidget) widget).setPreferredLocation(new Point(100, 200));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JScrollPane pnlRotate;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        scene.addNode(new RectangleRotater(100, 100, 100, 100, 90, ""));
        scene.addNode(new RectangleRotater(200, 200, 100, 100, 90, ""));
        scene.addNode(new RectangleRotater(200, 200, 100, 100, 90, "Label3"));
        
//        resizableLabelWidget.rotate();
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
