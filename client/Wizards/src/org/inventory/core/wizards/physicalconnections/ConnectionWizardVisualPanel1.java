/*
 *  Copyright 2010-2016 Neotropic SAS <contact@neotropic.co>.
 * 
 *   Licensed under the EPL License, Version 1.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *        http://www.eclipse.org/legal/epl-v10.html
 * 
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 * 
 */
package org.inventory.core.wizards.physicalconnections;

import java.awt.BorderLayout;
import javax.swing.JLabel;
import org.inventory.core.services.utils.ExplorablePanel;
import javax.swing.JPanel;
import org.inventory.communications.core.LocalObjectLight;
import org.inventory.navigation.applicationnodes.objectnodes.ObjectNode;
import org.openide.explorer.view.BeanTreeView;

public final class ConnectionWizardVisualPanel1 extends JPanel{

    private BeanTreeView treeLeft;
    private BeanTreeView treeRight;
    private LocalObjectLight aSide;
    private LocalObjectLight bSide;
    private ExplorablePanel pnlLeft;
    private ExplorablePanel pnlRight;
    private JLabel lblInstructions;

    ConnectionWizardVisualPanel1(LocalObjectLight aSide, LocalObjectLight bSide) {
        this.aSide = aSide;
        this.bSide = bSide;
        initComponents();
        initCustomComponents();
    }

    public void initCustomComponents(){
        
        lblInstructions = new JLabel("Select the objects (ports or nodes) you'd like to connect.");
        
        treeLeft = new BeanTreeView();
        treeRight = new BeanTreeView();

        pnlLeft = new ExplorablePanel();
        pnlRight = new ExplorablePanel();
                  
        pnlLeft.getExplorerManager().setRootContext(new ObjectNode(aSide));
        pnlRight.getExplorerManager().setRootContext(new ObjectNode(bSide));
        
        pnlLeft.setViewportView(treeLeft);
        pnlRight.setViewportView(treeRight);
        
        add(lblInstructions, BorderLayout.NORTH);
        add(pnlLeft, BorderLayout.WEST);
        add(pnlRight, BorderLayout.EAST);
    }

    @Override
    public String getName() {
        return "Choose endpoints";
    }

    public ExplorablePanel getPnlLeft() {
        return pnlLeft;
    }

    public ExplorablePanel getPnlRight() {
        return pnlRight;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
