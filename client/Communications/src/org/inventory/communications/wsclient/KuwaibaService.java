
package org.inventory.communications.wsclient;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "KuwaibaService", targetNamespace = "http://ws.kuwaiba.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface KuwaibaService {


    /**
     * 
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.GroupInfo>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGroups", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGroups")
    @ResponseWrapper(localName = "getGroupsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGroupsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getGroupsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getGroupsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getGroups/Fault/ServerSideException")
    })
    public List<GroupInfo> getGroups(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param visible
     * @param isReadOnly
     * @param displayName
     * @param administrative
     * @param noCopy
     * @param unique
     * @param name
     * @param description
     * @param className
     * @param sessionId
     * @param type
     * @param mandatory
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "createAttribute", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateAttribute")
    @ResponseWrapper(localName = "createAttributeResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateAttributeResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createAttributeRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createAttributeResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createAttribute/Fault/ServerSideException")
    })
    public void createAttribute(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "displayName", targetNamespace = "")
        String displayName,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "administrative", targetNamespace = "")
        boolean administrative,
        @WebParam(name = "visible", targetNamespace = "")
        boolean visible,
        @WebParam(name = "isReadOnly", targetNamespace = "")
        boolean isReadOnly,
        @WebParam(name = "noCopy", targetNamespace = "")
        boolean noCopy,
        @WebParam(name = "unique", targetNamespace = "")
        boolean unique,
        @WebParam(name = "mandatory", targetNamespace = "")
        boolean mandatory,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param reportId
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteReport
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReport", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetReport")
    @ResponseWrapper(localName = "getReportResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetReportResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getReportRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getReportResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getReport/Fault/ServerSideException")
    })
    public RemoteReport getReport(
        @WebParam(name = "reportId", targetNamespace = "")
        long reportId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param query
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ResultRecord>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeQuery", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ExecuteQuery")
    @ResponseWrapper(localName = "executeQueryResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ExecuteQueryResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/executeQueryRequest", output = "http://ws.kuwaiba.org/KuwaibaService/executeQueryResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/executeQuery/Fault/ServerSideException")
    })
    public List<ResultRecord> executeQuery(
        @WebParam(name = "query", targetNamespace = "")
        TransientQuery query,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param taskId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteTaskResult
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeTask", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ExecuteTask")
    @ResponseWrapper(localName = "executeTaskResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ExecuteTaskResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/executeTaskRequest", output = "http://ws.kuwaiba.org/KuwaibaService/executeTaskResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/executeTask/Fault/ServerSideException")
    })
    public RemoteTaskResult executeTask(
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns org.inventory.communications.wsclient.RemoteSession
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSession", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSession")
    @ResponseWrapper(localName = "createSessionResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSessionResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createSessionRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createSessionResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createSession/Fault/ServerSideException")
    })
    public RemoteSession createSession(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param showAll
     * @param sessionId
     * @return
     *     returns byte[]
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClassHierarchy", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetClassHierarchy")
    @ResponseWrapper(localName = "getClassHierarchyResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetClassHierarchyResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getClassHierarchyRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getClassHierarchyResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getClassHierarchy/Fault/ServerSideException")
    })
    public byte[] getClassHierarchy(
        @WebParam(name = "showAll", targetNamespace = "")
        boolean showAll,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param groupName
     * @param description
     * @param sessionId
     * @param users
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createGroup", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateGroup")
    @ResponseWrapper(localName = "createGroupResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateGroupResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createGroupRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createGroupResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createGroup/Fault/ServerSideException")
    })
    public long createGroup(
        @WebParam(name = "groupName", targetNamespace = "")
        String groupName,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "users", targetNamespace = "")
        List<Long> users,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sesionId
     * @param className
     * @param attributeName
     * @return
     *     returns org.inventory.communications.wsclient.AttributeInfo
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttribute", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetAttribute")
    @ResponseWrapper(localName = "getAttributeResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetAttributeResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getAttributeRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getAttributeResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getAttribute/Fault/ServerSideException")
    })
    public AttributeInfo getAttribute(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "attributeName", targetNamespace = "")
        String attributeName,
        @WebParam(name = "sesionId", targetNamespace = "")
        String sesionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classId
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteClassWithId")
    @ResponseWrapper(localName = "deleteClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteClassWithId/Fault/ServerSideException")
    })
    public void deleteClassWithId(
        @WebParam(name = "classId", targetNamespace = "")
        long classId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassId
     * @param childrenToBeAdded
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addPossibleChildrenForClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddPossibleChildrenForClassWithId")
    @ResponseWrapper(localName = "addPossibleChildrenForClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddPossibleChildrenForClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addPossibleChildrenForClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addPossibleChildrenForClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addPossibleChildrenForClassWithId/Fault/ServerSideException")
    })
    public void addPossibleChildrenForClassWithId(
        @WebParam(name = "parentClassId", targetNamespace = "")
        long parentClassId,
        @WebParam(name = "childrenToBeAdded", targetNamespace = "")
        List<Long> childrenToBeAdded,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassId
     * @param possibleSpecialChildren
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addPossibleSpecialChildrenWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddPossibleSpecialChildrenWithId")
    @ResponseWrapper(localName = "addPossibleSpecialChildrenWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddPossibleSpecialChildrenWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addPossibleSpecialChildrenWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addPossibleSpecialChildrenWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addPossibleSpecialChildrenWithId/Fault/ServerSideException")
    })
    public void addPossibleSpecialChildrenWithId(
        @WebParam(name = "parentClassId", targetNamespace = "")
        long parentClassId,
        @WebParam(name = "possibleSpecialChildren", targetNamespace = "")
        List<Long> possibleSpecialChildren,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassId
     * @param childrenToBeRemoved
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removePossibleChildrenForClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemovePossibleChildrenForClassWithId")
    @ResponseWrapper(localName = "removePossibleChildrenForClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemovePossibleChildrenForClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/removePossibleChildrenForClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/removePossibleChildrenForClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/removePossibleChildrenForClassWithId/Fault/ServerSideException")
    })
    public void removePossibleChildrenForClassWithId(
        @WebParam(name = "parentClassId", targetNamespace = "")
        long parentClassId,
        @WebParam(name = "childrenToBeRemoved", targetNamespace = "")
        List<Long> childrenToBeRemoved,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClassId
     * @param maxResults
     * @param oid
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjectChildrenForClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectChildrenForClassWithId")
    @ResponseWrapper(localName = "getObjectChildrenForClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectChildrenForClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectChildrenForClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectChildrenForClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObjectChildrenForClassWithId/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getObjectChildrenForClassWithId(
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "objectClassId", targetNamespace = "")
        long objectClassId,
        @WebParam(name = "maxResults", targetNamespace = "")
        int maxResults,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param sessionId
     * @param projectClass
     * @param projectId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "freeObjectFromProject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.FreeObjectFromProject")
    @ResponseWrapper(localName = "freeObjectFromProjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.FreeObjectFromProjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/freeObjectFromProjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/freeObjectFromProjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/freeObjectFromProject/Fault/ServerSideException")
    })
    public void freeObjectFromProject(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "projectClass", targetNamespace = "")
        String projectClass,
        @WebParam(name = "projectId", targetNamespace = "")
        long projectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param firstName
     * @param lastName
     * @param password
     * @param oid
     * @param sessionId
     * @param type
     * @param enabled
     * @param username
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setUserProperties", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetUserProperties")
    @ResponseWrapper(localName = "setUserPropertiesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetUserPropertiesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/setUserPropertiesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/setUserPropertiesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/setUserProperties/Fault/ServerSideException")
    })
    public void setUserProperties(
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "firstName", targetNamespace = "")
        String firstName,
        @WebParam(name = "lastName", targetNamespace = "")
        String lastName,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "enabled", targetNamespace = "")
        int enabled,
        @WebParam(name = "type", targetNamespace = "")
        int type,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.UserInfo>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetUsersResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getUsersRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getUsersResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getUsers/Fault/ServerSideException")
    })
    public List<UserInfo> getUsers(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classId
     * @param isInDesign
     * @param color
     * @param displayName
     * @param icon
     * @param isCustom
     * @param description
     * @param className
     * @param smallIcon
     * @param isCountable
     * @param sessionId
     * @param isAbstract
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setClassProperties", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetClassProperties")
    @ResponseWrapper(localName = "setClassPropertiesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetClassPropertiesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/setClassPropertiesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/setClassPropertiesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/setClassProperties/Fault/ServerSideException")
    })
    public void setClassProperties(
        @WebParam(name = "classId", targetNamespace = "")
        long classId,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "displayName", targetNamespace = "")
        String displayName,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "smallIcon", targetNamespace = "")
        byte[] smallIcon,
        @WebParam(name = "icon", targetNamespace = "")
        byte[] icon,
        @WebParam(name = "color", targetNamespace = "")
        int color,
        @WebParam(name = "isAbstract", targetNamespace = "")
        Boolean isAbstract,
        @WebParam(name = "isInDesign", targetNamespace = "")
        Boolean isInDesign,
        @WebParam(name = "isCustom", targetNamespace = "")
        Boolean isCustom,
        @WebParam(name = "isCountable", targetNamespace = "")
        Boolean isCountable,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param reportName
     * @param reportDescription
     * @param outputType
     * @param className
     * @param sessionId
     * @param script
     * @param enabled
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createClassLevelReport", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateClassLevelReport")
    @ResponseWrapper(localName = "createClassLevelReportResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateClassLevelReportResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createClassLevelReportRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createClassLevelReportResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createClassLevelReport/Fault/ServerSideException")
    })
    public long createClassLevelReport(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "reportName", targetNamespace = "")
        String reportName,
        @WebParam(name = "reportDescription", targetNamespace = "")
        String reportDescription,
        @WebParam(name = "script", targetNamespace = "")
        String script,
        @WebParam(name = "outputType", targetNamespace = "")
        int outputType,
        @WebParam(name = "enabled", targetNamespace = "")
        boolean enabled,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param userId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.GroupInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGroupsForUser", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGroupsForUser")
    @ResponseWrapper(localName = "getGroupsForUserResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGroupsForUserResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getGroupsForUserRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getGroupsForUserResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getGroupsForUser/Fault/ServerSideException")
    })
    public List<GroupInfoLight> getGroupsForUser(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param isInDesign
     * @param color
     * @param displayName
     * @param parentClassName
     * @param isCustom
     * @param icon
     * @param description
     * @param className
     * @param isCountable
     * @param smallIcon
     * @param sessionId
     * @param isAbstract
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createClass", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateClass")
    @ResponseWrapper(localName = "createClassResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateClassResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createClassRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createClassResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createClass/Fault/ServerSideException")
    })
    public long createClass(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "displayName", targetNamespace = "")
        String displayName,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "isAbstract", targetNamespace = "")
        boolean isAbstract,
        @WebParam(name = "isCustom", targetNamespace = "")
        boolean isCustom,
        @WebParam(name = "isCountable", targetNamespace = "")
        boolean isCountable,
        @WebParam(name = "isInDesign", targetNamespace = "")
        boolean isInDesign,
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "icon", targetNamespace = "")
        byte[] icon,
        @WebParam(name = "smallIcon", targetNamespace = "")
        byte[] smallIcon,
        @WebParam(name = "color", targetNamespace = "")
        int color,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param includeSelf
     * @param includeAbstractClasses
     * @param className
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubClassesLight", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubClassesLight")
    @ResponseWrapper(localName = "getSubClassesLightResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubClassesLightResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubClassesLightRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubClassesLightResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubClassesLight/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getSubClassesLight(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "includeAbstractClasses", targetNamespace = "")
        boolean includeAbstractClasses,
        @WebParam(name = "includeSelf", targetNamespace = "")
        boolean includeSelf,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param includeSelf
     * @param includeAbstractClasses
     * @param className
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubClassesLightNoRecursive", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubClassesLightNoRecursive")
    @ResponseWrapper(localName = "getSubClassesLightNoRecursiveResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubClassesLightNoRecursiveResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubClassesLightNoRecursiveRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubClassesLightNoRecursiveResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubClassesLightNoRecursive/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getSubClassesLightNoRecursive(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "includeAbstractClasses", targetNamespace = "")
        boolean includeAbstractClasses,
        @WebParam(name = "includeSelf", targetNamespace = "")
        boolean includeSelf,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param includeListTypes
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfo>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllClasses", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetAllClasses")
    @ResponseWrapper(localName = "getAllClassesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetAllClassesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getAllClassesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getAllClassesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getAllClasses/Fault/ServerSideException")
    })
    public List<ClassInfo> getAllClasses(
        @WebParam(name = "includeListTypes", targetNamespace = "")
        boolean includeListTypes,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteClass", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteClass")
    @ResponseWrapper(localName = "deleteClassResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteClassResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteClassRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteClassResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteClass/Fault/ServerSideException")
    })
    public void deleteClass(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param includeListTypes
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllClassesLight", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetAllClassesLight")
    @ResponseWrapper(localName = "getAllClassesLightResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetAllClassesLightResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getAllClassesLightRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getAllClassesLightResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getAllClassesLight/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getAllClassesLight(
        @WebParam(name = "includeListTypes", targetNamespace = "")
        boolean includeListTypes,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param visible
     * @param displayName
     * @param noCopy
     * @param description
     * @param className
     * @param readOnly
     * @param sessionId
     * @param type
     * @param mandatory
     * @param attributeId
     * @param administrative
     * @param unique
     * @param name
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setAttributeProperties", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetAttributeProperties")
    @ResponseWrapper(localName = "setAttributePropertiesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetAttributePropertiesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/setAttributePropertiesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/setAttributePropertiesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/setAttributeProperties/Fault/ServerSideException")
    })
    public void setAttributeProperties(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "attributeId", targetNamespace = "")
        long attributeId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "displayName", targetNamespace = "")
        String displayName,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "administrative", targetNamespace = "")
        Boolean administrative,
        @WebParam(name = "mandatory", targetNamespace = "")
        Boolean mandatory,
        @WebParam(name = "noCopy", targetNamespace = "")
        Boolean noCopy,
        @WebParam(name = "readOnly", targetNamespace = "")
        Boolean readOnly,
        @WebParam(name = "unique", targetNamespace = "")
        Boolean unique,
        @WebParam(name = "visible", targetNamespace = "")
        Boolean visible,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param attributeName
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteAttribute", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteAttribute")
    @ResponseWrapper(localName = "deleteAttributeResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteAttributeResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteAttributeRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteAttributeResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteAttribute/Fault/ServerSideException")
    })
    public void deleteAttribute(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "attributeName", targetNamespace = "")
        String attributeName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassName
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPossibleChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPossibleChildren")
    @ResponseWrapper(localName = "getPossibleChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPossibleChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPossibleChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPossibleChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPossibleChildren/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getPossibleChildren(
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassName
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPossibleSpecialChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPossibleSpecialChildren")
    @ResponseWrapper(localName = "getPossibleSpecialChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPossibleSpecialChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPossibleSpecialChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPossibleSpecialChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPossibleSpecialChildren/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getPossibleSpecialChildren(
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassName
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPossibleChildrenNoRecursive", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPossibleChildrenNoRecursive")
    @ResponseWrapper(localName = "getPossibleChildrenNoRecursiveResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPossibleChildrenNoRecursiveResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPossibleChildrenNoRecursiveRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPossibleChildrenNoRecursiveResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPossibleChildrenNoRecursive/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getPossibleChildrenNoRecursive(
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassName
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPossibleSpecialChildrenNoRecursive", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPossibleSpecialChildrenNoRecursive")
    @ResponseWrapper(localName = "getPossibleSpecialChildrenNoRecursiveResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPossibleSpecialChildrenNoRecursiveResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPossibleSpecialChildrenNoRecursiveRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPossibleSpecialChildrenNoRecursiveResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPossibleSpecialChildrenNoRecursive/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getPossibleSpecialChildrenNoRecursive(
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @param recursive
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUpstreamContainmentHierarchy", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetUpstreamContainmentHierarchy")
    @ResponseWrapper(localName = "getUpstreamContainmentHierarchyResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetUpstreamContainmentHierarchyResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getUpstreamContainmentHierarchyRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getUpstreamContainmentHierarchyResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getUpstreamContainmentHierarchy/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getUpstreamContainmentHierarchy(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "recursive", targetNamespace = "")
        boolean recursive,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @param recursive
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUpstreamSpecialContainmentHierarchy", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetUpstreamSpecialContainmentHierarchy")
    @ResponseWrapper(localName = "getUpstreamSpecialContainmentHierarchyResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetUpstreamSpecialContainmentHierarchyResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getUpstreamSpecialContainmentHierarchyRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getUpstreamSpecialContainmentHierarchyResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getUpstreamSpecialContainmentHierarchy/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getUpstreamSpecialContainmentHierarchy(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "recursive", targetNamespace = "")
        boolean recursive,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassName
     * @param childrenToBeAdded
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addPossibleChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddPossibleChildren")
    @ResponseWrapper(localName = "addPossibleChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddPossibleChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addPossibleChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addPossibleChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addPossibleChildren/Fault/ServerSideException")
    })
    public void addPossibleChildren(
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "childrenToBeAdded", targetNamespace = "")
        List<String> childrenToBeAdded,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassName
     * @param possibleSpecialChildren
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addPossibleSpecialChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddPossibleSpecialChildren")
    @ResponseWrapper(localName = "addPossibleSpecialChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddPossibleSpecialChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addPossibleSpecialChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addPossibleSpecialChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addPossibleSpecialChildren/Fault/ServerSideException")
    })
    public void addPossibleSpecialChildren(
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "possibleSpecialChildren", targetNamespace = "")
        List<String> possibleSpecialChildren,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassId
     * @param specialChildrenToBeRemoved
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removePossibleSpecialChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemovePossibleSpecialChildren")
    @ResponseWrapper(localName = "removePossibleSpecialChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemovePossibleSpecialChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/removePossibleSpecialChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/removePossibleSpecialChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/removePossibleSpecialChildren/Fault/ServerSideException")
    })
    public void removePossibleSpecialChildren(
        @WebParam(name = "parentClassId", targetNamespace = "")
        long parentClassId,
        @WebParam(name = "specialChildrenToBeRemoved", targetNamespace = "")
        List<Long> specialChildrenToBeRemoved,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param displayName
     * @param name
     * @param className
     * @param sessionId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createListTypeItem", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateListTypeItem")
    @ResponseWrapper(localName = "createListTypeItemResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateListTypeItemResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createListTypeItemRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createListTypeItemResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createListTypeItem/Fault/ServerSideException")
    })
    public long createListTypeItem(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "displayName", targetNamespace = "")
        String displayName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param oid
     * @param sessionId
     * @param releaseRelationships
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteListTypeItem", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteListTypeItem")
    @ResponseWrapper(localName = "deleteListTypeItemResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteListTypeItemResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteListTypeItemRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteListTypeItemResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteListTypeItem/Fault/ServerSideException")
    })
    public void deleteListTypeItem(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "releaseRelationships", targetNamespace = "")
        boolean releaseRelationships,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListTypeItems", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetListTypeItems")
    @ResponseWrapper(localName = "getListTypeItemsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetListTypeItemsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getListTypeItemsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getListTypeItemsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getListTypeItems/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getListTypeItems(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "closeSession", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CloseSession")
    @ResponseWrapper(localName = "closeSessionResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CloseSessionResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/closeSessionRequest", output = "http://ws.kuwaiba.org/KuwaibaService/closeSessionResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/closeSession/Fault/ServerSideException")
    })
    public void closeSession(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClassName
     * @param maxResults
     * @param oid
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjectChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectChildren")
    @ResponseWrapper(localName = "getObjectChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObjectChildren/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getObjectChildren(
        @WebParam(name = "objectClassName", targetNamespace = "")
        String objectClassName,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "maxResults", targetNamespace = "")
        int maxResults,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClassName
     * @param maxResults
     * @param oid
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSiblings", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSiblings")
    @ResponseWrapper(localName = "getSiblingsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSiblingsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSiblingsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSiblingsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSiblings/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getSiblings(
        @WebParam(name = "objectClassName", targetNamespace = "")
        String objectClassName,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "maxResults", targetNamespace = "")
        int maxResults,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentOid
     * @param maxResults
     * @param childrenClass
     * @param parentClass
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObject>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getChildrenOfClass", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetChildrenOfClass")
    @ResponseWrapper(localName = "getChildrenOfClassResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetChildrenOfClassResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getChildrenOfClassRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getChildrenOfClassResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getChildrenOfClass/Fault/ServerSideException")
    })
    public List<RemoteObject> getChildrenOfClass(
        @WebParam(name = "parentOid", targetNamespace = "")
        long parentOid,
        @WebParam(name = "parentClass", targetNamespace = "")
        String parentClass,
        @WebParam(name = "childrenClass", targetNamespace = "")
        String childrenClass,
        @WebParam(name = "maxResults", targetNamespace = "")
        int maxResults,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentOid
     * @param maxResults
     * @param childrenClass
     * @param parentClass
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getChildrenOfClassLight", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetChildrenOfClassLight")
    @ResponseWrapper(localName = "getChildrenOfClassLightResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetChildrenOfClassLightResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getChildrenOfClassLightRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getChildrenOfClassLightResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getChildrenOfClassLight/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getChildrenOfClassLight(
        @WebParam(name = "parentOid", targetNamespace = "")
        long parentOid,
        @WebParam(name = "parentClass", targetNamespace = "")
        String parentClass,
        @WebParam(name = "childrenClass", targetNamespace = "")
        String childrenClass,
        @WebParam(name = "maxResults", targetNamespace = "")
        int maxResults,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param oid
     * @param sessionId
     * @param objectclass
     * @return
     *     returns org.inventory.communications.wsclient.RemoteObjectLight
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjectLight", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectLight")
    @ResponseWrapper(localName = "getObjectLightResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectLightResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectLightRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectLightResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObjectLight/Fault/ServerSideException")
    })
    public RemoteObjectLight getObjectLight(
        @WebParam(name = "objectclass", targetNamespace = "")
        String objectclass,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param aObjectClass
     * @param aOid
     * @param bOid
     * @param bObjectClass
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteObjectLight
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCommonParent", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetCommonParent")
    @ResponseWrapper(localName = "getCommonParentResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetCommonParentResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getCommonParentRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getCommonParentResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getCommonParent/Fault/ServerSideException")
    })
    public RemoteObjectLight getCommonParent(
        @WebParam(name = "aObjectClass", targetNamespace = "")
        String aObjectClass,
        @WebParam(name = "aOid", targetNamespace = "")
        long aOid,
        @WebParam(name = "bObjectClass", targetNamespace = "")
        String bObjectClass,
        @WebParam(name = "bOid", targetNamespace = "")
        long bOid,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param oid
     * @param attributename
     * @param sessionId
     * @param objectclass
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSpecialAttribute", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSpecialAttribute")
    @ResponseWrapper(localName = "getSpecialAttributeResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSpecialAttributeResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSpecialAttributeRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSpecialAttributeResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSpecialAttribute/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getSpecialAttribute(
        @WebParam(name = "objectclass", targetNamespace = "")
        String objectclass,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "attributename", targetNamespace = "")
        String attributename,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param oid
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteObjectSpecialRelationships
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSpecialAttributes", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSpecialAttributes")
    @ResponseWrapper(localName = "getSpecialAttributesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSpecialAttributesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSpecialAttributesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSpecialAttributesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSpecialAttributes/Fault/ServerSideException")
    })
    public RemoteObjectSpecialRelationships getSpecialAttributes(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getParentsUntilFirstOfClass", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetParentsUntilFirstOfClass")
    @ResponseWrapper(localName = "getParentsUntilFirstOfClassResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetParentsUntilFirstOfClassResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getParentsUntilFirstOfClassRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getParentsUntilFirstOfClassResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getParentsUntilFirstOfClass/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getParentsUntilFirstOfClass(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        long arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param parentClass
     * @param oid
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteObject
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getParentOfClass", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetParentOfClass")
    @ResponseWrapper(localName = "getParentOfClassResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetParentOfClassResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getParentOfClassRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getParentOfClassResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getParentOfClass/Fault/ServerSideException")
    })
    public RemoteObject getParentOfClass(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "parentClass", targetNamespace = "")
        String parentClass,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param objectclass
     * @param objectId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjectSpecialChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectSpecialChildren")
    @ResponseWrapper(localName = "getObjectSpecialChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectSpecialChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectSpecialChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectSpecialChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObjectSpecialChildren/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getObjectSpecialChildren(
        @WebParam(name = "objectclass", targetNamespace = "")
        String objectclass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param maxResults
     * @param className
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjectsOfClassLight", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectsOfClassLight")
    @ResponseWrapper(localName = "getObjectsOfClassLightResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectsOfClassLightResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectsOfClassLightRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectsOfClassLightResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObjectsOfClassLight/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getObjectsOfClassLight(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "maxResults", targetNamespace = "")
        int maxResults,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ClassInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getInstanceableListTypes", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetInstanceableListTypes")
    @ResponseWrapper(localName = "getInstanceableListTypesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetInstanceableListTypesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getInstanceableListTypesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getInstanceableListTypesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getInstanceableListTypes/Fault/ServerSideException")
    })
    public List<ClassInfoLight> getInstanceableListTypes(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentObjectClassName
     * @param attributeNames
     * @param parentOid
     * @param attributeValues
     * @param className
     * @param sessionId
     * @param templateId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSpecialObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSpecialObject")
    @ResponseWrapper(localName = "createSpecialObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSpecialObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createSpecialObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createSpecialObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createSpecialObject/Fault/ServerSideException")
    })
    public long createSpecialObject(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "parentObjectClassName", targetNamespace = "")
        String parentObjectClassName,
        @WebParam(name = "parentOid", targetNamespace = "")
        long parentOid,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "templateId", targetNamespace = "")
        long templateId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param oid
     * @param sessionId
     * @param releaseRelationships
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteObject")
    @ResponseWrapper(localName = "deleteObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteObject/Fault/ServerSideException")
    })
    public void deleteObject(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "releaseRelationships", targetNamespace = "")
        boolean releaseRelationships,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classNames
     * @param oid
     * @param sessionId
     * @param releaseRelationships
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteObjects", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteObjects")
    @ResponseWrapper(localName = "deleteObjectsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteObjectsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteObjectsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteObjectsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteObjects/Fault/ServerSideException")
    })
    public void deleteObjects(
        @WebParam(name = "classNames", targetNamespace = "")
        List<String> classNames,
        @WebParam(name = "oid", targetNamespace = "")
        List<Long> oid,
        @WebParam(name = "releaseRelationships", targetNamespace = "")
        boolean releaseRelationships,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectsOids
     * @param targetClass
     * @param objectsClasses
     * @param targetOid
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "moveObjectsToPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.MoveObjectsToPool")
    @ResponseWrapper(localName = "moveObjectsToPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.MoveObjectsToPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/moveObjectsToPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/moveObjectsToPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/moveObjectsToPool/Fault/ServerSideException")
    })
    public void moveObjectsToPool(
        @WebParam(name = "targetClass", targetNamespace = "")
        String targetClass,
        @WebParam(name = "targetOid", targetNamespace = "")
        long targetOid,
        @WebParam(name = "objectsClasses", targetNamespace = "")
        List<String> objectsClasses,
        @WebParam(name = "objectsOids", targetNamespace = "")
        List<Long> objectsOids,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectsOids
     * @param targetClass
     * @param objectsClasses
     * @param targetOid
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "moveObjects", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.MoveObjects")
    @ResponseWrapper(localName = "moveObjectsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.MoveObjectsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/moveObjectsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/moveObjectsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/moveObjects/Fault/ServerSideException")
    })
    public void moveObjects(
        @WebParam(name = "targetClass", targetNamespace = "")
        String targetClass,
        @WebParam(name = "targetOid", targetNamespace = "")
        long targetOid,
        @WebParam(name = "objectsClasses", targetNamespace = "")
        List<String> objectsClasses,
        @WebParam(name = "objectsOids", targetNamespace = "")
        List<Long> objectsOids,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param attributeNames
     * @param attributeValues
     * @param className
     * @param oid
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateObject")
    @ResponseWrapper(localName = "updateObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateObject/Fault/ServerSideException")
    })
    public void updateObject(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.AttributeInfo>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMandatoryAttributesInClass", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetMandatoryAttributesInClass")
    @ResponseWrapper(localName = "getMandatoryAttributesInClassResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetMandatoryAttributesInClassResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getMandatoryAttributesInClassRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getMandatoryAttributesInClassResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getMandatoryAttributesInClass/Fault/ServerSideException")
    })
    public List<AttributeInfo> getMandatoryAttributesInClass(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objId
     * @param className
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "objectHasValuesInMandatoryAttributes", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ObjectHasValuesInMandatoryAttributes")
    @ResponseWrapper(localName = "objectHasValuesInMandatoryAttributesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ObjectHasValuesInMandatoryAttributesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/objectHasValuesInMandatoryAttributesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/objectHasValuesInMandatoryAttributesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/objectHasValuesInMandatoryAttributes/Fault/ServerSideException")
    })
    public void objectHasValuesInMandatoryAttributes(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "objId", targetNamespace = "")
        long objId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param namePattern
     * @param numberOfObjects
     * @param parentOid
     * @param parentClassName
     * @param className
     * @param sessionId
     * @return
     *     returns java.util.List<java.lang.Long>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createBulkObjects", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateBulkObjects")
    @ResponseWrapper(localName = "createBulkObjectsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateBulkObjectsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createBulkObjectsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createBulkObjectsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createBulkObjects/Fault/ServerSideException")
    })
    public List<Long> createBulkObjects(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "parentOid", targetNamespace = "")
        long parentOid,
        @WebParam(name = "numberOfObjects", targetNamespace = "")
        int numberOfObjects,
        @WebParam(name = "namePattern", targetNamespace = "")
        String namePattern,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param namePattern
     * @param numberOfSpecialObjects
     * @param parentClassName
     * @param className
     * @param sessionId
     * @param parentId
     * @return
     *     returns java.util.List<java.lang.Long>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createBulkSpecialObjects", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateBulkSpecialObjects")
    @ResponseWrapper(localName = "createBulkSpecialObjectsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateBulkSpecialObjectsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createBulkSpecialObjectsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createBulkSpecialObjectsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createBulkSpecialObjects/Fault/ServerSideException")
    })
    public List<Long> createBulkSpecialObjects(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "parentId", targetNamespace = "")
        long parentId,
        @WebParam(name = "numberOfSpecialObjects", targetNamespace = "")
        int numberOfSpecialObjects,
        @WebParam(name = "namePattern", targetNamespace = "")
        String namePattern,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param aObjectClass
     * @param aObjectId
     * @param bObjectClass
     * @param sessionId
     * @param bObjectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "connectMirrorPort", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ConnectMirrorPort")
    @ResponseWrapper(localName = "connectMirrorPortResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ConnectMirrorPortResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/connectMirrorPortRequest", output = "http://ws.kuwaiba.org/KuwaibaService/connectMirrorPortResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/connectMirrorPort/Fault/ServerSideException")
    })
    public void connectMirrorPort(
        @WebParam(name = "aObjectClass", targetNamespace = "")
        String aObjectClass,
        @WebParam(name = "aObjectId", targetNamespace = "")
        long aObjectId,
        @WebParam(name = "bObjectClass", targetNamespace = "")
        String bObjectClass,
        @WebParam(name = "bObjectId", targetNamespace = "")
        long bObjectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param sessionId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "releaseMirrorPort", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseMirrorPort")
    @ResponseWrapper(localName = "releaseMirrorPortResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseMirrorPortResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/releaseMirrorPortRequest", output = "http://ws.kuwaiba.org/KuwaibaService/releaseMirrorPortResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/releaseMirrorPort/Fault/ServerSideException")
    })
    public void releaseMirrorPort(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param aObjectClass
     * @param aObjectId
     * @param name
     * @param parentClass
     * @param connectionClass
     * @param bObjectClass
     * @param sessionId
     * @param templateId
     * @param bObjectId
     * @param parentId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPhysicalConnection", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreatePhysicalConnection")
    @ResponseWrapper(localName = "createPhysicalConnectionResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreatePhysicalConnectionResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createPhysicalConnectionRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createPhysicalConnectionResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createPhysicalConnection/Fault/ServerSideException")
    })
    public long createPhysicalConnection(
        @WebParam(name = "aObjectClass", targetNamespace = "")
        String aObjectClass,
        @WebParam(name = "aObjectId", targetNamespace = "")
        long aObjectId,
        @WebParam(name = "bObjectClass", targetNamespace = "")
        String bObjectClass,
        @WebParam(name = "bObjectId", targetNamespace = "")
        long bObjectId,
        @WebParam(name = "parentClass", targetNamespace = "")
        String parentClass,
        @WebParam(name = "parentId", targetNamespace = "")
        long parentId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "connectionClass", targetNamespace = "")
        String connectionClass,
        @WebParam(name = "templateId", targetNamespace = "")
        long templateId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param connectionId
     * @param connectionClass
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPhysicalConnectionEndpoints", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPhysicalConnectionEndpoints")
    @ResponseWrapper(localName = "getPhysicalConnectionEndpointsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPhysicalConnectionEndpointsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPhysicalConnectionEndpointsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPhysicalConnectionEndpointsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPhysicalConnectionEndpoints/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getPhysicalConnectionEndpoints(
        @WebParam(name = "connectionClass", targetNamespace = "")
        String connectionClass,
        @WebParam(name = "connectionId", targetNamespace = "")
        long connectionId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sideAClassNames
     * @param linksIds
     * @param sideBClassNames
     * @param sideBIds
     * @param sideAIds
     * @param linksClassNames
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "connectPhysicalLinks", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ConnectPhysicalLinks")
    @ResponseWrapper(localName = "connectPhysicalLinksResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ConnectPhysicalLinksResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/connectPhysicalLinksRequest", output = "http://ws.kuwaiba.org/KuwaibaService/connectPhysicalLinksResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/connectPhysicalLinks/Fault/ServerSideException")
    })
    public void connectPhysicalLinks(
        @WebParam(name = "sideAClassNames", targetNamespace = "")
        List<String> sideAClassNames,
        @WebParam(name = "sideAIds", targetNamespace = "")
        List<Long> sideAIds,
        @WebParam(name = "linksClassNames", targetNamespace = "")
        List<String> linksClassNames,
        @WebParam(name = "linksIds", targetNamespace = "")
        List<Long> linksIds,
        @WebParam(name = "sideBClassNames", targetNamespace = "")
        List<String> sideBClassNames,
        @WebParam(name = "sideBIds", targetNamespace = "")
        List<Long> sideBIds,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sideAClassNames
     * @param sideBClassNames
     * @param sideBIds
     * @param sideAIds
     * @param containersClassNames
     * @param sessionId
     * @param containersIds
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "connectPhysicalContainers", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ConnectPhysicalContainers")
    @ResponseWrapper(localName = "connectPhysicalContainersResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ConnectPhysicalContainersResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/connectPhysicalContainersRequest", output = "http://ws.kuwaiba.org/KuwaibaService/connectPhysicalContainersResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/connectPhysicalContainers/Fault/ServerSideException")
    })
    public void connectPhysicalContainers(
        @WebParam(name = "sideAClassNames", targetNamespace = "")
        List<String> sideAClassNames,
        @WebParam(name = "sideAIds", targetNamespace = "")
        List<Long> sideAIds,
        @WebParam(name = "containersClassNames", targetNamespace = "")
        List<String> containersClassNames,
        @WebParam(name = "containersIds", targetNamespace = "")
        List<Long> containersIds,
        @WebParam(name = "sideBClassNames", targetNamespace = "")
        List<String> sideBClassNames,
        @WebParam(name = "sideBIds", targetNamespace = "")
        List<Long> sideBIds,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sideToDisconnect
     * @param connectionId
     * @param connectionClass
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "disconnectPhysicalConnection", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DisconnectPhysicalConnection")
    @ResponseWrapper(localName = "disconnectPhysicalConnectionResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DisconnectPhysicalConnectionResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/disconnectPhysicalConnectionRequest", output = "http://ws.kuwaiba.org/KuwaibaService/disconnectPhysicalConnectionResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/disconnectPhysicalConnection/Fault/ServerSideException")
    })
    public void disconnectPhysicalConnection(
        @WebParam(name = "connectionClass", targetNamespace = "")
        String connectionClass,
        @WebParam(name = "connectionId", targetNamespace = "")
        long connectionId,
        @WebParam(name = "sideToDisconnect", targetNamespace = "")
        int sideToDisconnect,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param sessionId
     * @param objectId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPhysicalPath", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPhysicalPath")
    @ResponseWrapper(localName = "getPhysicalPathResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPhysicalPathResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPhysicalPathRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPhysicalPathResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPhysicalPath/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getPhysicalPath(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param linkId
     * @param sessionId
     * @param linkClass
     * @return
     *     returns org.inventory.communications.wsclient.RemoteLogicalConnectionDetails
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLogicalLinkDetails", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetLogicalLinkDetails")
    @ResponseWrapper(localName = "getLogicalLinkDetailsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetLogicalLinkDetailsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getLogicalLinkDetailsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getLogicalLinkDetailsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getLogicalLinkDetails/Fault/ServerSideException")
    })
    public RemoteLogicalConnectionDetails getLogicalLinkDetails(
        @WebParam(name = "linkClass", targetNamespace = "")
        String linkClass,
        @WebParam(name = "linkId", targetNamespace = "")
        long linkId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param sessionId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deletePhysicalConnection", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeletePhysicalConnection")
    @ResponseWrapper(localName = "deletePhysicalConnectionResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeletePhysicalConnectionResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deletePhysicalConnectionRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deletePhysicalConnectionResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deletePhysicalConnection/Fault/ServerSideException")
    })
    public void deletePhysicalConnection(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param serviceClass
     * @param objectClass
     * @param sessionId
     * @param serviceId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "associateObjectToService", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectToService")
    @ResponseWrapper(localName = "associateObjectToServiceResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectToServiceResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/associateObjectToServiceRequest", output = "http://ws.kuwaiba.org/KuwaibaService/associateObjectToServiceResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/associateObjectToService/Fault/ServerSideException")
    })
    public void associateObjectToService(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "serviceClass", targetNamespace = "")
        String serviceClass,
        @WebParam(name = "serviceId", targetNamespace = "")
        long serviceId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param serviceClass
     * @param objectClass
     * @param sessionId
     * @param serviceId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "associateObjectsToService", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectsToService")
    @ResponseWrapper(localName = "associateObjectsToServiceResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectsToServiceResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToServiceRequest", output = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToServiceResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToService/Fault/ServerSideException")
    })
    public void associateObjectsToService(
        @WebParam(name = "objectClass", targetNamespace = "")
        List<String> objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        List<Long> objectId,
        @WebParam(name = "serviceClass", targetNamespace = "")
        String serviceClass,
        @WebParam(name = "serviceId", targetNamespace = "")
        long serviceId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param serviceClass
     * @param targetId
     * @param sessionId
     * @param serviceId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "releaseObjectFromService", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseObjectFromService")
    @ResponseWrapper(localName = "releaseObjectFromServiceResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseObjectFromServiceResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/releaseObjectFromServiceRequest", output = "http://ws.kuwaiba.org/KuwaibaService/releaseObjectFromServiceResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/releaseObjectFromService/Fault/ServerSideException")
    })
    public void releaseObjectFromService(
        @WebParam(name = "serviceClass", targetNamespace = "")
        String serviceClass,
        @WebParam(name = "serviceId", targetNamespace = "")
        long serviceId,
        @WebParam(name = "targetId", targetNamespace = "")
        long targetId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param serviceClass
     * @param sessionId
     * @param serviceId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getServiceResources", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetServiceResources")
    @ResponseWrapper(localName = "getServiceResourcesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetServiceResourcesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getServiceResourcesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getServiceResourcesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getServiceResources/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getServiceResources(
        @WebParam(name = "serviceClass", targetNamespace = "")
        String serviceClass,
        @WebParam(name = "serviceId", targetNamespace = "")
        long serviceId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param groupId
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.UserInfo>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsersInGroup", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetUsersInGroup")
    @ResponseWrapper(localName = "getUsersInGroupResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetUsersInGroupResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getUsersInGroupRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getUsersInGroupResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getUsersInGroup/Fault/ServerSideException")
    })
    public List<UserInfo> getUsersInGroup(
        @WebParam(name = "groupId", targetNamespace = "")
        long groupId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param groupId
     * @param sessionId
     * @param userId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addUserToGroup", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddUserToGroup")
    @ResponseWrapper(localName = "addUserToGroupResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddUserToGroupResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addUserToGroupRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addUserToGroupResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addUserToGroup/Fault/ServerSideException")
    })
    public void addUserToGroup(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "groupId", targetNamespace = "")
        long groupId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param groupId
     * @param sessionId
     * @param userId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removeUserFromGroup", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemoveUserFromGroup")
    @ResponseWrapper(localName = "removeUserFromGroupResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemoveUserFromGroupResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/removeUserFromGroupRequest", output = "http://ws.kuwaiba.org/KuwaibaService/removeUserFromGroupResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/removeUserFromGroup/Fault/ServerSideException")
    })
    public void removeUserFromGroup(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "groupId", targetNamespace = "")
        long groupId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param accessLevel
     * @param featureToken
     * @param sessionId
     * @param userId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setPrivilegeToUser", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetPrivilegeToUser")
    @ResponseWrapper(localName = "setPrivilegeToUserResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetPrivilegeToUserResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/setPrivilegeToUserRequest", output = "http://ws.kuwaiba.org/KuwaibaService/setPrivilegeToUserResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/setPrivilegeToUser/Fault/ServerSideException")
    })
    public void setPrivilegeToUser(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "featureToken", targetNamespace = "")
        String featureToken,
        @WebParam(name = "accessLevel", targetNamespace = "")
        int accessLevel,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param accessLevel
     * @param featureToken
     * @param groupId
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setPrivilegeToGroup", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetPrivilegeToGroup")
    @ResponseWrapper(localName = "setPrivilegeToGroupResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetPrivilegeToGroupResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/setPrivilegeToGroupRequest", output = "http://ws.kuwaiba.org/KuwaibaService/setPrivilegeToGroupResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/setPrivilegeToGroup/Fault/ServerSideException")
    })
    public void setPrivilegeToGroup(
        @WebParam(name = "groupId", targetNamespace = "")
        long groupId,
        @WebParam(name = "featureToken", targetNamespace = "")
        String featureToken,
        @WebParam(name = "accessLevel", targetNamespace = "")
        int accessLevel,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param featureToken
     * @param sessionId
     * @param userId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removePrivilegeFromUser", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemovePrivilegeFromUser")
    @ResponseWrapper(localName = "removePrivilegeFromUserResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemovePrivilegeFromUserResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/removePrivilegeFromUserRequest", output = "http://ws.kuwaiba.org/KuwaibaService/removePrivilegeFromUserResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/removePrivilegeFromUser/Fault/ServerSideException")
    })
    public void removePrivilegeFromUser(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "featureToken", targetNamespace = "")
        String featureToken,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param featureToken
     * @param groupId
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removePrivilegeFromGroup", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemovePrivilegeFromGroup")
    @ResponseWrapper(localName = "removePrivilegeFromGroupResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemovePrivilegeFromGroupResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/removePrivilegeFromGroupRequest", output = "http://ws.kuwaiba.org/KuwaibaService/removePrivilegeFromGroupResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/removePrivilegeFromGroup/Fault/ServerSideException")
    })
    public void removePrivilegeFromGroup(
        @WebParam(name = "groupId", targetNamespace = "")
        long groupId,
        @WebParam(name = "featureToken", targetNamespace = "")
        String featureToken,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param firstName
     * @param lastName
     * @param privileges
     * @param password
     * @param defaultGroupId
     * @param sessionId
     * @param type
     * @param enabled
     * @param username
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createUser", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateUserResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createUserRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createUserResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createUser/Fault/ServerSideException")
    })
    public long createUser(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "firstName", targetNamespace = "")
        String firstName,
        @WebParam(name = "LastName", targetNamespace = "")
        String lastName,
        @WebParam(name = "enabled", targetNamespace = "")
        boolean enabled,
        @WebParam(name = "type", targetNamespace = "")
        int type,
        @WebParam(name = "privileges", targetNamespace = "")
        List<PrivilegeInfo> privileges,
        @WebParam(name = "defaultGroupId", targetNamespace = "")
        long defaultGroupId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param groupName
     * @param description
     * @param oid
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setGroupProperties", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetGroupProperties")
    @ResponseWrapper(localName = "setGroupPropertiesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetGroupPropertiesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/setGroupPropertiesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/setGroupPropertiesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/setGroupProperties/Fault/ServerSideException")
    })
    public void setGroupProperties(
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "groupName", targetNamespace = "")
        String groupName,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param oids
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteUsers", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteUsers")
    @ResponseWrapper(localName = "deleteUsersResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteUsersResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteUsersRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteUsersResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteUsers/Fault/ServerSideException")
    })
    public void deleteUsers(
        @WebParam(name = "oids", targetNamespace = "")
        List<Long> oids,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param oids
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteGroups", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteGroups")
    @ResponseWrapper(localName = "deleteGroupsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteGroupsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteGroupsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteGroupsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteGroups/Fault/ServerSideException")
    })
    public void deleteGroups(
        @WebParam(name = "oids", targetNamespace = "")
        List<Long> oids,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param viewClassName
     * @param background
     * @param objectClass
     * @param name
     * @param description
     * @param sessionId
     * @param objectId
     * @param structure
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createObjectRelatedView", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateObjectRelatedView")
    @ResponseWrapper(localName = "createObjectRelatedViewResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateObjectRelatedViewResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createObjectRelatedViewRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createObjectRelatedViewResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createObjectRelatedView/Fault/ServerSideException")
    })
    public long createObjectRelatedView(
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "viewClassName", targetNamespace = "")
        String viewClassName,
        @WebParam(name = "structure", targetNamespace = "")
        byte[] structure,
        @WebParam(name = "background", targetNamespace = "")
        byte[] background,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param background
     * @param name
     * @param description
     * @param sessionId
     * @param viewClass
     * @param structure
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createGeneralView", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateGeneralView")
    @ResponseWrapper(localName = "createGeneralViewResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateGeneralViewResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createGeneralViewRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createGeneralViewResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createGeneralView/Fault/ServerSideException")
    })
    public long createGeneralView(
        @WebParam(name = "viewClass", targetNamespace = "")
        String viewClass,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "structure", targetNamespace = "")
        byte[] structure,
        @WebParam(name = "background", targetNamespace = "")
        byte[] background,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param viewId
     * @param objectClass
     * @param oid
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.ViewInfo
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjectRelatedView", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectRelatedView")
    @ResponseWrapper(localName = "getObjectRelatedViewResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectRelatedViewResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectRelatedViewRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectRelatedViewResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObjectRelatedView/Fault/ServerSideException")
    })
    public ViewInfo getObjectRelatedView(
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "viewId", targetNamespace = "")
        long viewId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param viewType
     * @param limit
     * @param oid
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ViewInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjectRelatedViews", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectRelatedViews")
    @ResponseWrapper(localName = "getObjectRelatedViewsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectRelatedViewsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectRelatedViewsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectRelatedViewsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObjectRelatedViews/Fault/ServerSideException")
    })
    public List<ViewInfoLight> getObjectRelatedViews(
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "viewType", targetNamespace = "")
        int viewType,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param viewId
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.ViewInfo
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGeneralView", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGeneralView")
    @ResponseWrapper(localName = "getGeneralViewResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGeneralViewResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getGeneralViewRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getGeneralViewResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getGeneralView/Fault/ServerSideException")
    })
    public ViewInfo getGeneralView(
        @WebParam(name = "viewId", targetNamespace = "")
        long viewId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param limit
     * @param sessionId
     * @param viewClass
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ViewInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGeneralViews", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGeneralViews")
    @ResponseWrapper(localName = "getGeneralViewsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGeneralViewsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getGeneralViewsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getGeneralViewsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getGeneralViews/Fault/ServerSideException")
    })
    public List<ViewInfoLight> getGeneralViews(
        @WebParam(name = "viewClass", targetNamespace = "")
        String viewClass,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param viewId
     * @param viewName
     * @param background
     * @param objectClass
     * @param viewDescription
     * @param sessionId
     * @param objectOid
     * @param structure
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateObjectRelatedView", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateObjectRelatedView")
    @ResponseWrapper(localName = "updateObjectRelatedViewResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateObjectRelatedViewResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateObjectRelatedViewRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateObjectRelatedViewResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateObjectRelatedView/Fault/ServerSideException")
    })
    public void updateObjectRelatedView(
        @WebParam(name = "objectOid", targetNamespace = "")
        long objectOid,
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "viewId", targetNamespace = "")
        long viewId,
        @WebParam(name = "viewName", targetNamespace = "")
        String viewName,
        @WebParam(name = "viewDescription", targetNamespace = "")
        String viewDescription,
        @WebParam(name = "structure", targetNamespace = "")
        byte[] structure,
        @WebParam(name = "background", targetNamespace = "")
        byte[] background,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param viewId
     * @param viewName
     * @param background
     * @param viewDescription
     * @param sessionId
     * @param structure
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateGeneralView", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateGeneralView")
    @ResponseWrapper(localName = "updateGeneralViewResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateGeneralViewResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateGeneralViewRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateGeneralViewResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateGeneralView/Fault/ServerSideException")
    })
    public void updateGeneralView(
        @WebParam(name = "viewId", targetNamespace = "")
        long viewId,
        @WebParam(name = "viewName", targetNamespace = "")
        String viewName,
        @WebParam(name = "viewDescription", targetNamespace = "")
        String viewDescription,
        @WebParam(name = "structure", targetNamespace = "")
        byte[] structure,
        @WebParam(name = "background", targetNamespace = "")
        byte[] background,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param oids
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteGeneralView", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteGeneralView")
    @ResponseWrapper(localName = "deleteGeneralViewResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteGeneralViewResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteGeneralViewRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteGeneralViewResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteGeneralView/Fault/ServerSideException")
    })
    public void deleteGeneralView(
        @WebParam(name = "oids", targetNamespace = "")
        List<Long> oids,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param queryStructure
     * @param ownerOid
     * @param queryName
     * @param description
     * @param sessionId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createQuery", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateQuery")
    @ResponseWrapper(localName = "createQueryResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateQueryResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createQueryRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createQueryResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createQuery/Fault/ServerSideException")
    })
    public long createQuery(
        @WebParam(name = "queryName", targetNamespace = "")
        String queryName,
        @WebParam(name = "ownerOid", targetNamespace = "")
        long ownerOid,
        @WebParam(name = "queryStructure", targetNamespace = "")
        byte[] queryStructure,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param queryStructure
     * @param queryOid
     * @param ownerOid
     * @param queryName
     * @param description
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "saveQuery", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SaveQuery")
    @ResponseWrapper(localName = "saveQueryResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SaveQueryResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/saveQueryRequest", output = "http://ws.kuwaiba.org/KuwaibaService/saveQueryResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/saveQuery/Fault/ServerSideException")
    })
    public void saveQuery(
        @WebParam(name = "queryOid", targetNamespace = "")
        long queryOid,
        @WebParam(name = "queryName", targetNamespace = "")
        String queryName,
        @WebParam(name = "ownerOid", targetNamespace = "")
        long ownerOid,
        @WebParam(name = "queryStructure", targetNamespace = "")
        byte[] queryStructure,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param queryOid
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteQuery", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteQuery")
    @ResponseWrapper(localName = "deleteQueryResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteQueryResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteQueryRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteQueryResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteQuery/Fault/ServerSideException")
    })
    public void deleteQuery(
        @WebParam(name = "queryOid", targetNamespace = "")
        long queryOid,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param showPublic
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteQueryLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQueries", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetQueries")
    @ResponseWrapper(localName = "getQueriesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetQueriesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getQueriesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getQueriesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getQueries/Fault/ServerSideException")
    })
    public List<RemoteQueryLight> getQueries(
        @WebParam(name = "showPublic", targetNamespace = "")
        boolean showPublic,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param name
     * @param instancesOfClass
     * @param description
     * @param sessionId
     * @param type
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createRootPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateRootPool")
    @ResponseWrapper(localName = "createRootPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateRootPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createRootPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createRootPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createRootPool/Fault/ServerSideException")
    })
    public long createRootPool(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "instancesOfClass", targetNamespace = "")
        String instancesOfClass,
        @WebParam(name = "type", targetNamespace = "")
        int type,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentClassname
     * @param name
     * @param instancesOfClass
     * @param description
     * @param sessionId
     * @param type
     * @param parentId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPoolInObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreatePoolInObject")
    @ResponseWrapper(localName = "createPoolInObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreatePoolInObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createPoolInObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createPoolInObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createPoolInObject/Fault/ServerSideException")
    })
    public long createPoolInObject(
        @WebParam(name = "parentClassname", targetNamespace = "")
        String parentClassname,
        @WebParam(name = "parentId", targetNamespace = "")
        long parentId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "instancesOfClass", targetNamespace = "")
        String instancesOfClass,
        @WebParam(name = "type", targetNamespace = "")
        int type,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param name
     * @param instancesOfClass
     * @param description
     * @param sessionId
     * @param type
     * @param parentId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPoolInPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreatePoolInPool")
    @ResponseWrapper(localName = "createPoolInPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreatePoolInPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createPoolInPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createPoolInPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createPoolInPool/Fault/ServerSideException")
    })
    public long createPoolInPool(
        @WebParam(name = "parentId", targetNamespace = "")
        long parentId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "instancesOfClass", targetNamespace = "")
        String instancesOfClass,
        @WebParam(name = "type", targetNamespace = "")
        int type,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param attributeNames
     * @param poolId
     * @param attributeValues
     * @param className
     * @param sessionId
     * @param templateId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPoolItem", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreatePoolItem")
    @ResponseWrapper(localName = "createPoolItemResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreatePoolItemResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createPoolItemRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createPoolItemResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createPoolItem/Fault/ServerSideException")
    })
    public long createPoolItem(
        @WebParam(name = "poolId", targetNamespace = "")
        long poolId,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "templateId", targetNamespace = "")
        long templateId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param ids
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deletePools", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeletePools")
    @ResponseWrapper(localName = "deletePoolsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeletePoolsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deletePoolsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deletePoolsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deletePools/Fault/ServerSideException")
    })
    public void deletePools(
        @WebParam(name = "ids", targetNamespace = "")
        List<Long> ids,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param poolId
     * @param name
     * @param description
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setPoolProperties", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetPoolProperties")
    @ResponseWrapper(localName = "setPoolPropertiesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetPoolPropertiesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/setPoolPropertiesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/setPoolPropertiesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/setPoolProperties/Fault/ServerSideException")
    })
    public void setPoolProperties(
        @WebParam(name = "poolId", targetNamespace = "")
        long poolId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @param type
     * @param includeSubclasses
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemotePool>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRootPools", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetRootPools")
    @ResponseWrapper(localName = "getRootPoolsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetRootPoolsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getRootPoolsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getRootPoolsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getRootPools/Fault/ServerSideException")
    })
    public List<RemotePool> getRootPools(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "type", targetNamespace = "")
        int type,
        @WebParam(name = "includeSubclasses", targetNamespace = "")
        boolean includeSubclasses,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClassName
     * @param poolClass
     * @param sessionId
     * @param objectId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemotePool>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPoolsInObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPoolsInObject")
    @ResponseWrapper(localName = "getPoolsInObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPoolsInObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPoolsInObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPoolsInObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPoolsInObject/Fault/ServerSideException")
    })
    public List<RemotePool> getPoolsInObject(
        @WebParam(name = "objectClassName", targetNamespace = "")
        String objectClassName,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "poolClass", targetNamespace = "")
        String poolClass,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param poolClass
     * @param sessionId
     * @param parentPoolId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemotePool>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPoolsInPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPoolsInPool")
    @ResponseWrapper(localName = "getPoolsInPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPoolsInPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPoolsInPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPoolsInPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPoolsInPool/Fault/ServerSideException")
    })
    public List<RemotePool> getPoolsInPool(
        @WebParam(name = "parentPoolId", targetNamespace = "")
        long parentPoolId,
        @WebParam(name = "poolClass", targetNamespace = "")
        String poolClass,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param poolId
     * @param limit
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPoolItems", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPoolItems")
    @ResponseWrapper(localName = "getPoolItemsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPoolItemsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPoolItemsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPoolItemsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPoolItems/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getPoolItems(
        @WebParam(name = "poolId", targetNamespace = "")
        long poolId,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param limit
     * @param sessionId
     * @param objectId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ApplicationLogEntry>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBusinessObjectAuditTrail", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetBusinessObjectAuditTrail")
    @ResponseWrapper(localName = "getBusinessObjectAuditTrailResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetBusinessObjectAuditTrailResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getBusinessObjectAuditTrailRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getBusinessObjectAuditTrailResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getBusinessObjectAuditTrail/Fault/ServerSideException")
    })
    public List<ApplicationLogEntry> getBusinessObjectAuditTrail(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param limit
     * @param page
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.ApplicationLogEntry>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getGeneralActivityAuditTrail", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGeneralActivityAuditTrail")
    @ResponseWrapper(localName = "getGeneralActivityAuditTrailResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetGeneralActivityAuditTrailResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getGeneralActivityAuditTrailRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getGeneralActivityAuditTrailResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getGeneralActivityAuditTrail/Fault/ServerSideException")
    })
    public List<ApplicationLogEntry> getGeneralActivityAuditTrail(
        @WebParam(name = "page", targetNamespace = "")
        int page,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param schedule
     * @param name
     * @param description
     * @param notificationType
     * @param sessionId
     * @param parameters
     * @param enabled
     * @param script
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createTask", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateTask")
    @ResponseWrapper(localName = "createTaskResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateTaskResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createTaskRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createTaskResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createTask/Fault/ServerSideException")
    })
    public long createTask(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "enabled", targetNamespace = "")
        boolean enabled,
        @WebParam(name = "script", targetNamespace = "")
        String script,
        @WebParam(name = "parameters", targetNamespace = "")
        List<StringPair> parameters,
        @WebParam(name = "schedule", targetNamespace = "")
        TaskScheduleDescriptor schedule,
        @WebParam(name = "notificationType", targetNamespace = "")
        TaskNotificationDescriptor notificationType,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param propertyName
     * @param propertyValue
     * @param sessionId
     * @param taskId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateTaskProperties", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTaskProperties")
    @ResponseWrapper(localName = "updateTaskPropertiesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTaskPropertiesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateTaskPropertiesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateTaskPropertiesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateTaskProperties/Fault/ServerSideException")
    })
    public void updateTaskProperties(
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "propertyName", targetNamespace = "")
        String propertyName,
        @WebParam(name = "propertyValue", targetNamespace = "")
        String propertyValue,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param parameters
     * @param taskId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateTaskParameters", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTaskParameters")
    @ResponseWrapper(localName = "updateTaskParametersResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTaskParametersResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateTaskParametersRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateTaskParametersResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateTaskParameters/Fault/ServerSideException")
    })
    public void updateTaskParameters(
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "parameters", targetNamespace = "")
        List<StringPair> parameters,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param schedule
     * @param sessionId
     * @param taskId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateTaskSchedule", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTaskSchedule")
    @ResponseWrapper(localName = "updateTaskScheduleResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTaskScheduleResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateTaskScheduleRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateTaskScheduleResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateTaskSchedule/Fault/ServerSideException")
    })
    public void updateTaskSchedule(
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "schedule", targetNamespace = "")
        TaskScheduleDescriptor schedule,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param notificationType
     * @param sessionId
     * @param taskId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateTaskNotificationType", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTaskNotificationType")
    @ResponseWrapper(localName = "updateTaskNotificationTypeResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTaskNotificationTypeResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateTaskNotificationTypeRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateTaskNotificationTypeResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateTaskNotificationType/Fault/ServerSideException")
    })
    public void updateTaskNotificationType(
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "notificationType", targetNamespace = "")
        TaskNotificationDescriptor notificationType,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param taskId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.UserInfoLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscribersForTask", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubscribersForTask")
    @ResponseWrapper(localName = "getSubscribersForTaskResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubscribersForTaskResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubscribersForTaskRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubscribersForTaskResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubscribersForTask/Fault/ServerSideException")
    })
    public List<UserInfoLight> getSubscribersForTask(
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteTask>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTasks", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTasks")
    @ResponseWrapper(localName = "getTasksResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTasksResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getTasksRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getTasksResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getTasks/Fault/ServerSideException")
    })
    public List<RemoteTask> getTasks(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param userId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteTask>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTasksForUser", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTasksForUser")
    @ResponseWrapper(localName = "getTasksForUserResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTasksForUserResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getTasksForUserRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getTasksForUserResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getTasksForUser/Fault/ServerSideException")
    })
    public List<RemoteTask> getTasksForUser(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param taskId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteTask", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteTask")
    @ResponseWrapper(localName = "deleteTaskResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteTaskResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteTaskRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteTaskResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteTask/Fault/ServerSideException")
    })
    public void deleteTask(
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param userId
     * @param taskId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "subscribeUserToTask", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SubscribeUserToTask")
    @ResponseWrapper(localName = "subscribeUserToTaskResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SubscribeUserToTaskResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/subscribeUserToTaskRequest", output = "http://ws.kuwaiba.org/KuwaibaService/subscribeUserToTaskResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/subscribeUserToTask/Fault/ServerSideException")
    })
    public void subscribeUserToTask(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param userId
     * @param taskId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "unsubscribeUserFromTask", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UnsubscribeUserFromTask")
    @ResponseWrapper(localName = "unsubscribeUserFromTaskResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UnsubscribeUserFromTaskResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/unsubscribeUserFromTaskRequest", output = "http://ws.kuwaiba.org/KuwaibaService/unsubscribeUserFromTaskResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/unsubscribeUserFromTask/Fault/ServerSideException")
    })
    public void unsubscribeUserFromTask(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param file
     * @param dataType
     * @param commitSize
     * @param sessionId
     * @return
     *     returns java.lang.String
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bulkUpload", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.BulkUpload")
    @ResponseWrapper(localName = "bulkUploadResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.BulkUploadResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/bulkUploadRequest", output = "http://ws.kuwaiba.org/KuwaibaService/bulkUploadResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/bulkUpload/Fault/ServerSideException")
    })
    public String bulkUpload(
        @WebParam(name = "file", targetNamespace = "")
        byte[] file,
        @WebParam(name = "commitSize", targetNamespace = "")
        int commitSize,
        @WebParam(name = "dataType", targetNamespace = "")
        int dataType,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param fileName
     * @param sessionId
     * @return
     *     returns byte[]
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "downloadBulkLoadLog", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DownloadBulkLoadLog")
    @ResponseWrapper(localName = "downloadBulkLoadLogResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DownloadBulkLoadLogResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/downloadBulkLoadLogRequest", output = "http://ws.kuwaiba.org/KuwaibaService/downloadBulkLoadLogResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/downloadBulkLoadLog/Fault/ServerSideException")
    })
    public byte[] downloadBulkLoadLog(
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param templateName
     * @param templateClass
     * @param sessionId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createTemplate", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateTemplate")
    @ResponseWrapper(localName = "createTemplateResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateTemplateResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createTemplateRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createTemplateResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createTemplate/Fault/ServerSideException")
    })
    public long createTemplate(
        @WebParam(name = "templateClass", targetNamespace = "")
        String templateClass,
        @WebParam(name = "templateName", targetNamespace = "")
        String templateName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param templateElementParentId
     * @param templateElementName
     * @param templateElementClass
     * @param sessionId
     * @param templateElementParentClassName
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createTemplateElement", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateTemplateElement")
    @ResponseWrapper(localName = "createTemplateElementResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateTemplateElementResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createTemplateElementRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createTemplateElementResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createTemplateElement/Fault/ServerSideException")
    })
    public long createTemplateElement(
        @WebParam(name = "templateElementClass", targetNamespace = "")
        String templateElementClass,
        @WebParam(name = "templateElementParentClassName", targetNamespace = "")
        String templateElementParentClassName,
        @WebParam(name = "templateElementParentId", targetNamespace = "")
        long templateElementParentId,
        @WebParam(name = "templateElementName", targetNamespace = "")
        String templateElementName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param tsElementParentClassName
     * @param tsElementName
     * @param tsElementParentId
     * @param templateElementClass
     * @param sessionId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createTemplateSpecialElement", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateTemplateSpecialElement")
    @ResponseWrapper(localName = "createTemplateSpecialElementResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateTemplateSpecialElementResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createTemplateSpecialElementRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createTemplateSpecialElementResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createTemplateSpecialElement/Fault/ServerSideException")
    })
    public long createTemplateSpecialElement(
        @WebParam(name = "templateElementClass", targetNamespace = "")
        String templateElementClass,
        @WebParam(name = "tsElementParentClassName", targetNamespace = "")
        String tsElementParentClassName,
        @WebParam(name = "tsElementParentId", targetNamespace = "")
        long tsElementParentId,
        @WebParam(name = "tsElementName", targetNamespace = "")
        String tsElementName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param attributeNames
     * @param attributeValues
     * @param templateElementId
     * @param templateElementClass
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateTemplateElement", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTemplateElement")
    @ResponseWrapper(localName = "updateTemplateElementResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateTemplateElementResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateTemplateElementRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateTemplateElementResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateTemplateElement/Fault/ServerSideException")
    })
    public void updateTemplateElement(
        @WebParam(name = "templateElementClass", targetNamespace = "")
        String templateElementClass,
        @WebParam(name = "templateElementId", targetNamespace = "")
        long templateElementId,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param templateElementId
     * @param templateElementClass
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteTemplateElement", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteTemplateElement")
    @ResponseWrapper(localName = "deleteTemplateElementResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteTemplateElementResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteTemplateElementRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteTemplateElementResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteTemplateElement/Fault/ServerSideException")
    })
    public void deleteTemplateElement(
        @WebParam(name = "templateElementClass", targetNamespace = "")
        String templateElementClass,
        @WebParam(name = "templateElementId", targetNamespace = "")
        long templateElementId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTemplatesForClass", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTemplatesForClass")
    @ResponseWrapper(localName = "getTemplatesForClassResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTemplatesForClassResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getTemplatesForClassRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getTemplatesForClassResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getTemplatesForClass/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getTemplatesForClass(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param templateElementId
     * @param templateElementClass
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTemplateElementChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTemplateElementChildren")
    @ResponseWrapper(localName = "getTemplateElementChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTemplateElementChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getTemplateElementChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getTemplateElementChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getTemplateElementChildren/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getTemplateElementChildren(
        @WebParam(name = "templateElementClass", targetNamespace = "")
        String templateElementClass,
        @WebParam(name = "templateElementId", targetNamespace = "")
        long templateElementId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param tsElementId
     * @param tsElementClass
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTemplateSpecialElementChildren", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTemplateSpecialElementChildren")
    @ResponseWrapper(localName = "getTemplateSpecialElementChildrenResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTemplateSpecialElementChildrenResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getTemplateSpecialElementChildrenRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getTemplateSpecialElementChildrenResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getTemplateSpecialElementChildren/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getTemplateSpecialElementChildren(
        @WebParam(name = "tsElementClass", targetNamespace = "")
        String tsElementClass,
        @WebParam(name = "tsElementId", targetNamespace = "")
        long tsElementId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param templateElementId
     * @param templateElementClass
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteObject
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTemplateElement", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTemplateElement")
    @ResponseWrapper(localName = "getTemplateElementResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTemplateElementResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getTemplateElementRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getTemplateElementResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getTemplateElement/Fault/ServerSideException")
    })
    public RemoteObject getTemplateElement(
        @WebParam(name = "templateElementClass", targetNamespace = "")
        String templateElementClass,
        @WebParam(name = "templateElementId", targetNamespace = "")
        long templateElementId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sourceObjectsClassNames
     * @param newParentId
     * @param newParentClassName
     * @param sessionId
     * @param sourceObjectsIds
     * @return
     *     returns java.util.List<java.lang.Long>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "copyTemplateElements", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CopyTemplateElements")
    @ResponseWrapper(localName = "copyTemplateElementsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CopyTemplateElementsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/copyTemplateElementsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/copyTemplateElementsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/copyTemplateElements/Fault/ServerSideException")
    })
    public List<Long> copyTemplateElements(
        @WebParam(name = "sourceObjectsClassNames", targetNamespace = "")
        List<String> sourceObjectsClassNames,
        @WebParam(name = "sourceObjectsIds", targetNamespace = "")
        List<Long> sourceObjectsIds,
        @WebParam(name = "newParentClassName", targetNamespace = "")
        String newParentClassName,
        @WebParam(name = "newParentId", targetNamespace = "")
        long newParentId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sourceObjectsClassNames
     * @param newParentId
     * @param newParentClassName
     * @param sessionId
     * @param sourceObjectsIds
     * @return
     *     returns java.util.List<java.lang.Long>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "copyTemplateSpecialElements", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CopyTemplateSpecialElements")
    @ResponseWrapper(localName = "copyTemplateSpecialElementsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CopyTemplateSpecialElementsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/copyTemplateSpecialElementsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/copyTemplateSpecialElementsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/copyTemplateSpecialElements/Fault/ServerSideException")
    })
    public List<Long> copyTemplateSpecialElements(
        @WebParam(name = "sourceObjectsClassNames", targetNamespace = "")
        List<String> sourceObjectsClassNames,
        @WebParam(name = "sourceObjectsIds", targetNamespace = "")
        List<Long> sourceObjectsIds,
        @WebParam(name = "newParentClassName", targetNamespace = "")
        String newParentClassName,
        @WebParam(name = "newParentId", targetNamespace = "")
        long newParentId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param reportName
     * @param reportDescription
     * @param outputType
     * @param sessionId
     * @param parameters
     * @param script
     * @param enabled
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createInventoryLevelReport", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateInventoryLevelReport")
    @ResponseWrapper(localName = "createInventoryLevelReportResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateInventoryLevelReportResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createInventoryLevelReportRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createInventoryLevelReportResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createInventoryLevelReport/Fault/ServerSideException")
    })
    public long createInventoryLevelReport(
        @WebParam(name = "reportName", targetNamespace = "")
        String reportName,
        @WebParam(name = "reportDescription", targetNamespace = "")
        String reportDescription,
        @WebParam(name = "script", targetNamespace = "")
        String script,
        @WebParam(name = "outputType", targetNamespace = "")
        int outputType,
        @WebParam(name = "enabled", targetNamespace = "")
        boolean enabled,
        @WebParam(name = "parameters", targetNamespace = "")
        List<StringPair> parameters,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param reportId
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteReport", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteReport")
    @ResponseWrapper(localName = "deleteReportResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteReportResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteReportRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteReportResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteReport/Fault/ServerSideException")
    })
    public void deleteReport(
        @WebParam(name = "reportId", targetNamespace = "")
        long reportId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param reportId
     * @param reportName
     * @param reportDescription
     * @param sessionId
     * @param type
     * @param enabled
     * @param script
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateReport", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateReport")
    @ResponseWrapper(localName = "updateReportResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateReportResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateReportRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateReportResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateReport/Fault/ServerSideException")
    })
    public void updateReport(
        @WebParam(name = "reportId", targetNamespace = "")
        long reportId,
        @WebParam(name = "reportName", targetNamespace = "")
        String reportName,
        @WebParam(name = "reportDescription", targetNamespace = "")
        String reportDescription,
        @WebParam(name = "enabled", targetNamespace = "")
        Boolean enabled,
        @WebParam(name = "type", targetNamespace = "")
        Integer type,
        @WebParam(name = "script", targetNamespace = "")
        String script,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param reportId
     * @param sessionId
     * @param parameters
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateReportParameters", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateReportParameters")
    @ResponseWrapper(localName = "updateReportParametersResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateReportParametersResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateReportParametersRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateReportParametersResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateReportParameters/Fault/ServerSideException")
    })
    public void updateReportParameters(
        @WebParam(name = "reportId", targetNamespace = "")
        long reportId,
        @WebParam(name = "parameters", targetNamespace = "")
        List<StringPair> parameters,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param includeDisabled
     * @param sessionId
     * @param recursive
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteReportLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClassLevelReports", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetClassLevelReports")
    @ResponseWrapper(localName = "getClassLevelReportsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetClassLevelReportsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getClassLevelReportsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getClassLevelReportsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getClassLevelReports/Fault/ServerSideException")
    })
    public List<RemoteReportLight> getClassLevelReports(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "recursive", targetNamespace = "")
        boolean recursive,
        @WebParam(name = "includeDisabled", targetNamespace = "")
        boolean includeDisabled,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param includeDisabled
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteReportLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getInventoryLevelReports", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetInventoryLevelReports")
    @ResponseWrapper(localName = "getInventoryLevelReportsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetInventoryLevelReportsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getInventoryLevelReportsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getInventoryLevelReportsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getInventoryLevelReports/Fault/ServerSideException")
    })
    public List<RemoteReportLight> getInventoryLevelReports(
        @WebParam(name = "includeDisabled", targetNamespace = "")
        boolean includeDisabled,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClassName
     * @param reportId
     * @param sessionId
     * @param objectId
     * @return
     *     returns byte[]
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeClassLevelReport", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ExecuteClassLevelReport")
    @ResponseWrapper(localName = "executeClassLevelReportResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ExecuteClassLevelReportResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/executeClassLevelReportRequest", output = "http://ws.kuwaiba.org/KuwaibaService/executeClassLevelReportResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/executeClassLevelReport/Fault/ServerSideException")
    })
    public byte[] executeClassLevelReport(
        @WebParam(name = "objectClassName", targetNamespace = "")
        String objectClassName,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "reportId", targetNamespace = "")
        long reportId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param reportId
     * @param sessionId
     * @param parameters
     * @return
     *     returns byte[]
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "executeInventoryLevelReport", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ExecuteInventoryLevelReport")
    @ResponseWrapper(localName = "executeInventoryLevelReportResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ExecuteInventoryLevelReportResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/executeInventoryLevelReportRequest", output = "http://ws.kuwaiba.org/KuwaibaService/executeInventoryLevelReportResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/executeInventoryLevelReport/Fault/ServerSideException")
    })
    public byte[] executeInventoryLevelReport(
        @WebParam(name = "reportId", targetNamespace = "")
        long reportId,
        @WebParam(name = "parameters", targetNamespace = "")
        List<StringPair> parameters,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classNameEndpointB
     * @param classNameEndpointA
     * @param linkType
     * @param sessionId
     * @param idEndpointA
     * @param defaultName
     * @param idEndpointB
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSDHTransportLink", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSDHTransportLink")
    @ResponseWrapper(localName = "createSDHTransportLinkResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSDHTransportLinkResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createSDHTransportLinkRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createSDHTransportLinkResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createSDHTransportLink/Fault/ServerSideException")
    })
    public long createSDHTransportLink(
        @WebParam(name = "classNameEndpointA", targetNamespace = "")
        String classNameEndpointA,
        @WebParam(name = "idEndpointA", targetNamespace = "")
        long idEndpointA,
        @WebParam(name = "classNameEndpointB", targetNamespace = "")
        String classNameEndpointB,
        @WebParam(name = "idEndpointB", targetNamespace = "")
        long idEndpointB,
        @WebParam(name = "linkType", targetNamespace = "")
        String linkType,
        @WebParam(name = "defaultName", targetNamespace = "")
        String defaultName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classNameEndpointB
     * @param classNameEndpointA
     * @param linkType
     * @param positions
     * @param sessionId
     * @param idEndpointA
     * @param defaultName
     * @param idEndpointB
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSDHContainerLink", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSDHContainerLink")
    @ResponseWrapper(localName = "createSDHContainerLinkResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSDHContainerLinkResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createSDHContainerLinkRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createSDHContainerLinkResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createSDHContainerLink/Fault/ServerSideException")
    })
    public long createSDHContainerLink(
        @WebParam(name = "classNameEndpointA", targetNamespace = "")
        String classNameEndpointA,
        @WebParam(name = "idEndpointA", targetNamespace = "")
        long idEndpointA,
        @WebParam(name = "classNameEndpointB", targetNamespace = "")
        String classNameEndpointB,
        @WebParam(name = "idEndpointB", targetNamespace = "")
        long idEndpointB,
        @WebParam(name = "linkType", targetNamespace = "")
        String linkType,
        @WebParam(name = "positions", targetNamespace = "")
        List<SdhPosition> positions,
        @WebParam(name = "defaultName", targetNamespace = "")
        String defaultName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param subnetId
     * @param vlanId
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "releaseSubnetFromVlan", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseSubnetFromVlan")
    @ResponseWrapper(localName = "releaseSubnetFromVlanResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseSubnetFromVlanResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/releaseSubnetFromVlanRequest", output = "http://ws.kuwaiba.org/KuwaibaService/releaseSubnetFromVlanResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/releaseSubnetFromVlan/Fault/ServerSideException")
    })
    public void releaseSubnetFromVlan(
        @WebParam(name = "subnetId", targetNamespace = "")
        long subnetId,
        @WebParam(name = "vlanId", targetNamespace = "")
        long vlanId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classNameEndpointB
     * @param classNameEndpointA
     * @param linkType
     * @param positions
     * @param sessionId
     * @param idEndpointA
     * @param defaultName
     * @param idEndpointB
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSDHTributaryLink", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSDHTributaryLink")
    @ResponseWrapper(localName = "createSDHTributaryLinkResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSDHTributaryLinkResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createSDHTributaryLinkRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createSDHTributaryLinkResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createSDHTributaryLink/Fault/ServerSideException")
    })
    public long createSDHTributaryLink(
        @WebParam(name = "classNameEndpointA", targetNamespace = "")
        String classNameEndpointA,
        @WebParam(name = "idEndpointA", targetNamespace = "")
        long idEndpointA,
        @WebParam(name = "classNameEndpointB", targetNamespace = "")
        String classNameEndpointB,
        @WebParam(name = "idEndpointB", targetNamespace = "")
        long idEndpointB,
        @WebParam(name = "linkType", targetNamespace = "")
        String linkType,
        @WebParam(name = "positions", targetNamespace = "")
        List<SdhPosition> positions,
        @WebParam(name = "defaultName", targetNamespace = "")
        String defaultName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param forceDelete
     * @param transportLinkId
     * @param sessionId
     * @param transportLinkClass
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSDHTransportLink", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSDHTransportLink")
    @ResponseWrapper(localName = "deleteSDHTransportLinkResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSDHTransportLinkResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHTransportLinkRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHTransportLinkResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHTransportLink/Fault/ServerSideException")
    })
    public void deleteSDHTransportLink(
        @WebParam(name = "transportLinkClass", targetNamespace = "")
        String transportLinkClass,
        @WebParam(name = "transportLinkId", targetNamespace = "")
        long transportLinkId,
        @WebParam(name = "forceDelete", targetNamespace = "")
        boolean forceDelete,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param containerLinkId
     * @param forceDelete
     * @param containerLinkClass
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSDHContainerLink", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSDHContainerLink")
    @ResponseWrapper(localName = "deleteSDHContainerLinkResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSDHContainerLinkResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHContainerLinkRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHContainerLinkResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHContainerLink/Fault/ServerSideException")
    })
    public void deleteSDHContainerLink(
        @WebParam(name = "containerLinkClass", targetNamespace = "")
        String containerLinkClass,
        @WebParam(name = "containerLinkId", targetNamespace = "")
        long containerLinkId,
        @WebParam(name = "forceDelete", targetNamespace = "")
        boolean forceDelete,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param tributaryLinkClass
     * @param forceDelete
     * @param tributaryLinkId
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSDHTributaryLink", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSDHTributaryLink")
    @ResponseWrapper(localName = "deleteSDHTributaryLinkResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSDHTributaryLinkResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHTributaryLinkRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHTributaryLinkResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteSDHTributaryLink/Fault/ServerSideException")
    })
    public void deleteSDHTributaryLink(
        @WebParam(name = "tributaryLinkClass", targetNamespace = "")
        String tributaryLinkClass,
        @WebParam(name = "tributaryLinkId", targetNamespace = "")
        long tributaryLinkId,
        @WebParam(name = "forceDelete", targetNamespace = "")
        boolean forceDelete,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param communicationsEquipmentIB
     * @param communicationsEquipmentIdA
     * @param sessionId
     * @param communicationsEquipmentClassB
     * @param communicationsEquipmentClassA
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteBusinessObjectLightList>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSDHRoutesUsingTransportLinks", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.FindSDHRoutesUsingTransportLinks")
    @ResponseWrapper(localName = "findSDHRoutesUsingTransportLinksResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.FindSDHRoutesUsingTransportLinksResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/findSDHRoutesUsingTransportLinksRequest", output = "http://ws.kuwaiba.org/KuwaibaService/findSDHRoutesUsingTransportLinksResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/findSDHRoutesUsingTransportLinks/Fault/ServerSideException")
    })
    public List<RemoteBusinessObjectLightList> findSDHRoutesUsingTransportLinks(
        @WebParam(name = "communicationsEquipmentClassA", targetNamespace = "")
        String communicationsEquipmentClassA,
        @WebParam(name = "communicationsEquipmentIdA", targetNamespace = "")
        long communicationsEquipmentIdA,
        @WebParam(name = "communicationsEquipmentClassB", targetNamespace = "")
        String communicationsEquipmentClassB,
        @WebParam(name = "communicationsEquipmentIB", targetNamespace = "")
        long communicationsEquipmentIB,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param communicationsEquipmentIB
     * @param communicationsEquipmentIdA
     * @param sessionId
     * @param communicationsEquipmentClassB
     * @param communicationsEquipmentClassA
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteBusinessObjectLightList>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSDHRoutesUsingContainerLinks", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.FindSDHRoutesUsingContainerLinks")
    @ResponseWrapper(localName = "findSDHRoutesUsingContainerLinksResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.FindSDHRoutesUsingContainerLinksResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/findSDHRoutesUsingContainerLinksRequest", output = "http://ws.kuwaiba.org/KuwaibaService/findSDHRoutesUsingContainerLinksResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/findSDHRoutesUsingContainerLinks/Fault/ServerSideException")
    })
    public List<RemoteBusinessObjectLightList> findSDHRoutesUsingContainerLinks(
        @WebParam(name = "communicationsEquipmentClassA", targetNamespace = "")
        String communicationsEquipmentClassA,
        @WebParam(name = "communicationsEquipmentIdA", targetNamespace = "")
        long communicationsEquipmentIdA,
        @WebParam(name = "communicationsEquipmentClassB", targetNamespace = "")
        String communicationsEquipmentClassB,
        @WebParam(name = "communicationsEquipmentIB", targetNamespace = "")
        long communicationsEquipmentIB,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param transportLinkId
     * @param sessionId
     * @param transportLinkClass
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.SdhContainerLinkDefinition>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSDHTransportLinkStructure", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSDHTransportLinkStructure")
    @ResponseWrapper(localName = "getSDHTransportLinkStructureResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSDHTransportLinkStructureResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSDHTransportLinkStructureRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSDHTransportLinkStructureResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSDHTransportLinkStructure/Fault/ServerSideException")
    })
    public List<SdhContainerLinkDefinition> getSDHTransportLinkStructure(
        @WebParam(name = "transportLinkClass", targetNamespace = "")
        String transportLinkClass,
        @WebParam(name = "transportLinkId", targetNamespace = "")
        long transportLinkId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param containerLinkId
     * @param containerLinkClass
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.SdhContainerLinkDefinition>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSDHContainerLinkStructure", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSDHContainerLinkStructure")
    @ResponseWrapper(localName = "getSDHContainerLinkStructureResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSDHContainerLinkStructureResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSDHContainerLinkStructureRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSDHContainerLinkStructureResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSDHContainerLinkStructure/Fault/ServerSideException")
    })
    public List<SdhContainerLinkDefinition> getSDHContainerLinkStructure(
        @WebParam(name = "containerLinkClass", targetNamespace = "")
        String containerLinkClass,
        @WebParam(name = "containerLinkId", targetNamespace = "")
        long containerLinkId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param id
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteObject
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubnet", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnet")
    @ResponseWrapper(localName = "getSubnetResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubnetRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubnetResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubnet/Fault/ServerSideException")
    })
    public RemoteObject getSubnet(
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param subnetPoolId
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemotePool
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubnetPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetPool")
    @ResponseWrapper(localName = "getSubnetPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubnetPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubnetPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubnetPool/Fault/ServerSideException")
    })
    public RemotePool getSubnetPool(
        @WebParam(name = "subnetPoolId", targetNamespace = "")
        long subnetPoolId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param limit
     * @param className
     * @param sessionId
     * @param parentId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemotePool>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubnetPools", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetPools")
    @ResponseWrapper(localName = "getSubnetPoolsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetPoolsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubnetPoolsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubnetPoolsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubnetPools/Fault/ServerSideException")
    })
    public List<RemotePool> getSubnetPools(
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "parentId", targetNamespace = "")
        long parentId,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param poolId
     * @param limit
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubnets", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnets")
    @ResponseWrapper(localName = "getSubnetsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubnetsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubnetsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubnets/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getSubnets(
        @WebParam(name = "poolId", targetNamespace = "")
        long poolId,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @param subnetPoolName
     * @param subnetPoolDescription
     * @param parentId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSubnetPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSubnetPool")
    @ResponseWrapper(localName = "createSubnetPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSubnetPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createSubnetPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createSubnetPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createSubnetPool/Fault/ServerSideException")
    })
    public long createSubnetPool(
        @WebParam(name = "parentId", targetNamespace = "")
        long parentId,
        @WebParam(name = "subnetPoolName", targetNamespace = "")
        String subnetPoolName,
        @WebParam(name = "subnetPoolDescription", targetNamespace = "")
        String subnetPoolDescription,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param attributeNames
     * @param poolId
     * @param attributeValues
     * @param className
     * @param sessionId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSubnet", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSubnet")
    @ResponseWrapper(localName = "createSubnetResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateSubnetResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createSubnetRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createSubnetResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createSubnet/Fault/ServerSideException")
    })
    public long createSubnet(
        @WebParam(name = "poolId", targetNamespace = "")
        long poolId,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @param oids
     * @param releaseRelationships
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSubnets", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSubnets")
    @ResponseWrapper(localName = "deleteSubnetsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSubnetsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteSubnetsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteSubnetsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteSubnets/Fault/ServerSideException")
    })
    public void deleteSubnets(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "oids", targetNamespace = "")
        List<Long> oids,
        @WebParam(name = "releaseRelationships", targetNamespace = "")
        boolean releaseRelationships,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param ids
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSubnetPools", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSubnetPools")
    @ResponseWrapper(localName = "deleteSubnetPoolsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteSubnetPoolsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteSubnetPoolsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteSubnetPoolsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteSubnetPools/Fault/ServerSideException")
    })
    public void deleteSubnetPools(
        @WebParam(name = "ids", targetNamespace = "")
        List<Long> ids,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param attributeNames
     * @param parentClassName
     * @param attributeValues
     * @param id
     * @param sessionId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addIP", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddIP")
    @ResponseWrapper(localName = "addIPResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddIPResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addIPRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addIPResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addIP/Fault/ServerSideException")
    })
    public long addIP(
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param oid
     * @param sessionId
     * @param releaseRelationships
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removeIP", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemoveIP")
    @ResponseWrapper(localName = "removeIPResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemoveIPResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/removeIPRequest", output = "http://ws.kuwaiba.org/KuwaibaService/removeIPResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/removeIP/Fault/ServerSideException")
    })
    public void removeIP(
        @WebParam(name = "oid", targetNamespace = "")
        List<Long> oid,
        @WebParam(name = "releaseRelationships", targetNamespace = "")
        boolean releaseRelationships,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param portClassName
     * @param id
     * @param sessionId
     * @param portId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "relateIPtoPort", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RelateIPtoPort")
    @ResponseWrapper(localName = "relateIPtoPortResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RelateIPtoPortResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/relateIPtoPortRequest", output = "http://ws.kuwaiba.org/KuwaibaService/relateIPtoPortResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/relateIPtoPort/Fault/ServerSideException")
    })
    public void relateIPtoPort(
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "portClassName", targetNamespace = "")
        String portClassName,
        @WebParam(name = "portId", targetNamespace = "")
        long portId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param vlanId
     * @param className
     * @param id
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "relateSubnetToVlan", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RelateSubnetToVlan")
    @ResponseWrapper(localName = "relateSubnetToVlanResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RelateSubnetToVlanResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/relateSubnetToVlanRequest", output = "http://ws.kuwaiba.org/KuwaibaService/relateSubnetToVlanResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/relateSubnetToVlan/Fault/ServerSideException")
    })
    public void relateSubnetToVlan(
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "vlanId", targetNamespace = "")
        long vlanId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param vrfId
     * @param className
     * @param id
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "relateSubnetToVrf", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RelateSubnetToVrf")
    @ResponseWrapper(localName = "relateSubnetToVrfResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RelateSubnetToVrfResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/relateSubnetToVrfRequest", output = "http://ws.kuwaiba.org/KuwaibaService/relateSubnetToVrfResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/relateSubnetToVrf/Fault/ServerSideException")
    })
    public void relateSubnetToVrf(
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "vrfId", targetNamespace = "")
        long vrfId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param deviceClassName
     * @param id
     * @param sessionId
     * @param deviceId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "releasePortFromIP", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleasePortFromIP")
    @ResponseWrapper(localName = "releasePortFromIPResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleasePortFromIPResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/releasePortFromIPRequest", output = "http://ws.kuwaiba.org/KuwaibaService/releasePortFromIPResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/releasePortFromIP/Fault/ServerSideException")
    })
    public void releasePortFromIP(
        @WebParam(name = "deviceClassName", targetNamespace = "")
        String deviceClassName,
        @WebParam(name = "deviceId", targetNamespace = "")
        long deviceId,
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param subnetId
     * @param vrfId
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "releaseSubnetFromVRF", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseSubnetFromVRF")
    @ResponseWrapper(localName = "releaseSubnetFromVRFResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseSubnetFromVRFResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/releaseSubnetFromVRFRequest", output = "http://ws.kuwaiba.org/KuwaibaService/releaseSubnetFromVRFResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/releaseSubnetFromVRF/Fault/ServerSideException")
    })
    public void releaseSubnetFromVRF(
        @WebParam(name = "subnetId", targetNamespace = "")
        long subnetId,
        @WebParam(name = "vrfId", targetNamespace = "")
        long vrfId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param limit
     * @param className
     * @param id
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubnetUsedIps", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetUsedIps")
    @ResponseWrapper(localName = "getSubnetUsedIpsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetUsedIpsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubnetUsedIpsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubnetUsedIpsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubnetUsedIps/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getSubnetUsedIps(
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param limit
     * @param className
     * @param id
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubnetsInSubent", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetsInSubent")
    @ResponseWrapper(localName = "getSubnetsInSubentResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetSubnetsInSubentResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getSubnetsInSubentRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getSubnetsInSubentResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getSubnetsInSubent/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getSubnetsInSubent(
        @WebParam(name = "id", targetNamespace = "")
        long id,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param interfaceClassName
     * @param portClassName
     * @param interfaceId
     * @param sessionId
     * @param portId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "relatePortToInterface", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RelatePortToInterface")
    @ResponseWrapper(localName = "relatePortToInterfaceResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RelatePortToInterfaceResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/relatePortToInterfaceRequest", output = "http://ws.kuwaiba.org/KuwaibaService/relatePortToInterfaceResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/relatePortToInterface/Fault/ServerSideException")
    })
    public void relatePortToInterface(
        @WebParam(name = "portId", targetNamespace = "")
        long portId,
        @WebParam(name = "portClassName", targetNamespace = "")
        String portClassName,
        @WebParam(name = "interfaceClassName", targetNamespace = "")
        String interfaceClassName,
        @WebParam(name = "interfaceId", targetNamespace = "")
        long interfaceId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param interfaceClassName
     * @param interfaceId
     * @param sessionId
     * @param portId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "releasePortFromInterface", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleasePortFromInterface")
    @ResponseWrapper(localName = "releasePortFromInterfaceResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleasePortFromInterfaceResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/releasePortFromInterfaceRequest", output = "http://ws.kuwaiba.org/KuwaibaService/releasePortFromInterfaceResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/releasePortFromInterface/Fault/ServerSideException")
    })
    public void releasePortFromInterface(
        @WebParam(name = "interfaceClassName", targetNamespace = "")
        String interfaceClassName,
        @WebParam(name = "interfaceId", targetNamespace = "")
        long interfaceId,
        @WebParam(name = "portId", targetNamespace = "")
        long portId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param broadcastIp
     * @param networkIp
     * @param sessionId
     * @return
     *     returns boolean
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "itOverlaps", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ItOverlaps")
    @ResponseWrapper(localName = "itOverlapsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ItOverlapsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/itOverlapsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/itOverlapsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/itOverlaps/Fault/ServerSideException")
    })
    public boolean itOverlaps(
        @WebParam(name = "networkIp", targetNamespace = "")
        String networkIp,
        @WebParam(name = "broadcastIp", targetNamespace = "")
        String broadcastIp,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param contractClass
     * @param objectClass
     * @param contractId
     * @param sessionId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "associateObjectsToContract", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectsToContract")
    @ResponseWrapper(localName = "associateObjectsToContractResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectsToContractResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToContractRequest", output = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToContractResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToContract/Fault/ServerSideException")
    })
    public void associateObjectsToContract(
        @WebParam(name = "objectClass", targetNamespace = "")
        List<String> objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        List<Long> objectId,
        @WebParam(name = "contractClass", targetNamespace = "")
        String contractClass,
        @WebParam(name = "contractId", targetNamespace = "")
        long contractId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param contractId
     * @param sessionId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "releaseObjectFromContract", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseObjectFromContract")
    @ResponseWrapper(localName = "releaseObjectFromContractResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.ReleaseObjectFromContractResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/releaseObjectFromContractRequest", output = "http://ws.kuwaiba.org/KuwaibaService/releaseObjectFromContractResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/releaseObjectFromContract/Fault/ServerSideException")
    })
    public void releaseObjectFromContract(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "contractId", targetNamespace = "")
        long contractId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classNameEndpointB
     * @param classNameEndpointA
     * @param linkType
     * @param sessionId
     * @param idEndpointA
     * @param defaultName
     * @param idEndpointB
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createMPLSLink", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateMPLSLink")
    @ResponseWrapper(localName = "createMPLSLinkResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateMPLSLinkResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createMPLSLinkRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createMPLSLinkResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createMPLSLink/Fault/ServerSideException")
    })
    public long createMPLSLink(
        @WebParam(name = "classNameEndpointA", targetNamespace = "")
        String classNameEndpointA,
        @WebParam(name = "idEndpointA", targetNamespace = "")
        long idEndpointA,
        @WebParam(name = "classNameEndpointB", targetNamespace = "")
        String classNameEndpointB,
        @WebParam(name = "idEndpointB", targetNamespace = "")
        long idEndpointB,
        @WebParam(name = "linkType", targetNamespace = "")
        String linkType,
        @WebParam(name = "defaultName", targetNamespace = "")
        String defaultName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param linkId
     * @param forceDelete
     * @param sessionId
     * @param linkClass
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteMPLSLink", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteMPLSLink")
    @ResponseWrapper(localName = "deleteMPLSLinkResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteMPLSLinkResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteMPLSLinkRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteMPLSLinkResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteMPLSLink/Fault/ServerSideException")
    })
    public void deleteMPLSLink(
        @WebParam(name = "linkClass", targetNamespace = "")
        String linkClass,
        @WebParam(name = "linkId", targetNamespace = "")
        long linkId,
        @WebParam(name = "forceDelete", targetNamespace = "")
        boolean forceDelete,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemotePool>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProjectPools", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectPools")
    @ResponseWrapper(localName = "getProjectPoolsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectPoolsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getProjectPoolsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getProjectPoolsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getProjectPools/Fault/ServerSideException")
    })
    public List<RemotePool> getProjectPools(
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param attributeNames
     * @param parentClassName
     * @param attributeValues
     * @param className
     * @param sessionId
     * @param parentId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addProject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddProject")
    @ResponseWrapper(localName = "addProjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddProjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addProjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addProjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addProject/Fault/ServerSideException")
    })
    public long addProject(
        @WebParam(name = "parentId", targetNamespace = "")
        long parentId,
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param oid
     * @param sessionId
     * @param releaseRelationships
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteProject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteProject")
    @ResponseWrapper(localName = "deleteProjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteProjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteProjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteProjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteProject/Fault/ServerSideException")
    })
    public void deleteProject(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "releaseRelationships", targetNamespace = "")
        boolean releaseRelationships,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param attributeNames
     * @param parentClassName
     * @param attributeValues
     * @param className
     * @param sessionId
     * @param parentId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addActivity", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddActivity")
    @ResponseWrapper(localName = "addActivityResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddActivityResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addActivityRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addActivityResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addActivity/Fault/ServerSideException")
    })
    public long addActivity(
        @WebParam(name = "parentId", targetNamespace = "")
        long parentId,
        @WebParam(name = "parentClassName", targetNamespace = "")
        String parentClassName,
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param oid
     * @param sessionId
     * @param releaseReltationships
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteActivity", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteActivity")
    @ResponseWrapper(localName = "deleteActivityResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteActivityResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteActivityRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteActivityResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteActivity/Fault/ServerSideException")
    })
    public void deleteActivity(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "releaseReltationships", targetNamespace = "")
        boolean releaseReltationships,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param poolId
     * @param limit
     * @param sessionId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProjectsInProjectPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectsInProjectPool")
    @ResponseWrapper(localName = "getProjectsInProjectPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectsInProjectPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getProjectsInProjectPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getProjectsInProjectPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getProjectsInProjectPool/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getProjectsInProjectPool(
        @WebParam(name = "poolId", targetNamespace = "")
        long poolId,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param projectClass
     * @param projectId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProjectResurces", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectResurces")
    @ResponseWrapper(localName = "getProjectResurcesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectResurcesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getProjectResurcesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getProjectResurcesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getProjectResurces/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getProjectResurces(
        @WebParam(name = "projectClass", targetNamespace = "")
        String projectClass,
        @WebParam(name = "projectId", targetNamespace = "")
        long projectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param projectClass
     * @param projectId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProjectActivities", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectActivities")
    @ResponseWrapper(localName = "getProjectActivitiesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectActivitiesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getProjectActivitiesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getProjectActivitiesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getProjectActivities/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getProjectActivities(
        @WebParam(name = "projectClass", targetNamespace = "")
        String projectClass,
        @WebParam(name = "projectId", targetNamespace = "")
        long projectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param sessionId
     * @param projectClass
     * @param projectId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "associateObjectsToProject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectsToProject")
    @ResponseWrapper(localName = "associateObjectsToProjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectsToProjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToProjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToProjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/associateObjectsToProject/Fault/ServerSideException")
    })
    public void associateObjectsToProject(
        @WebParam(name = "projectClass", targetNamespace = "")
        String projectClass,
        @WebParam(name = "projectId", targetNamespace = "")
        long projectId,
        @WebParam(name = "objectClass", targetNamespace = "")
        List<String> objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        List<Long> objectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param sessionId
     * @param projectClass
     * @param projectId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "associateObjectToProject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectToProject")
    @ResponseWrapper(localName = "associateObjectToProjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AssociateObjectToProjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/associateObjectToProjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/associateObjectToProjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/associateObjectToProject/Fault/ServerSideException")
    })
    public void associateObjectToProject(
        @WebParam(name = "projectClass", targetNamespace = "")
        String projectClass,
        @WebParam(name = "projectId", targetNamespace = "")
        long projectId,
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param sessionId
     * @param objectId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProjectsAssociateToObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectsAssociateToObject")
    @ResponseWrapper(localName = "getProjectsAssociateToObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetProjectsAssociateToObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getProjectsAssociateToObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getProjectsAssociateToObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getProjectsAssociateToObject/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getProjectsAssociateToObject(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "ObjectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param name
     * @param description
     * @param instanceOfClass
     * @param sessionId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createProjectPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateProjectPool")
    @ResponseWrapper(localName = "createProjectPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateProjectPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createProjectPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createProjectPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createProjectPool/Fault/ServerSideException")
    })
    public long createProjectPool(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "instanceOfClass", targetNamespace = "")
        String instanceOfClass,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param favoritesFolderName
     * @param sessionId
     * @param userId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createFavoritesFolderForUser", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateFavoritesFolderForUser")
    @ResponseWrapper(localName = "createFavoritesFolderForUserResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateFavoritesFolderForUserResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createFavoritesFolderForUserRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createFavoritesFolderForUserResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createFavoritesFolderForUser/Fault/ServerSideException")
    })
    public long createFavoritesFolderForUser(
        @WebParam(name = "favoritesFolderName", targetNamespace = "")
        String favoritesFolderName,
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param favoritesFolderId
     * @param sessionId
     * @param userId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteFavoritesFolders", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteFavoritesFolders")
    @ResponseWrapper(localName = "deleteFavoritesFoldersResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteFavoritesFoldersResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteFavoritesFoldersRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteFavoritesFoldersResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteFavoritesFolders/Fault/ServerSideException")
    })
    public void deleteFavoritesFolders(
        @WebParam(name = "favoritesFolderId", targetNamespace = "")
        List<Long> favoritesFolderId,
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param userId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteFavoritesFolder>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFavoritesFoldersForUser", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetFavoritesFoldersForUser")
    @ResponseWrapper(localName = "getFavoritesFoldersForUserResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetFavoritesFoldersForUserResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFoldersForUserRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFoldersForUserResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFoldersForUser/Fault/ServerSideException")
    })
    public List<RemoteFavoritesFolder> getFavoritesFoldersForUser(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param favoritesFolderId
     * @param objectClass
     * @param sessionId
     * @param userId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "addObjectsToFavoritesFolder", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddObjectsToFavoritesFolder")
    @ResponseWrapper(localName = "addObjectsToFavoritesFolderResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.AddObjectsToFavoritesFolderResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/addObjectsToFavoritesFolderRequest", output = "http://ws.kuwaiba.org/KuwaibaService/addObjectsToFavoritesFolderResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/addObjectsToFavoritesFolder/Fault/ServerSideException")
    })
    public void addObjectsToFavoritesFolder(
        @WebParam(name = "objectClass", targetNamespace = "")
        List<String> objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        List<Long> objectId,
        @WebParam(name = "favoritesFolderId", targetNamespace = "")
        long favoritesFolderId,
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param favoritesFolderId
     * @param objectClass
     * @param sessionId
     * @param userId
     * @param objectId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "removeObjectsFromFavoritesFolder", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemoveObjectsFromFavoritesFolder")
    @ResponseWrapper(localName = "removeObjectsFromFavoritesFolderResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.RemoveObjectsFromFavoritesFolderResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/removeObjectsFromFavoritesFolderRequest", output = "http://ws.kuwaiba.org/KuwaibaService/removeObjectsFromFavoritesFolderResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/removeObjectsFromFavoritesFolder/Fault/ServerSideException")
    })
    public void removeObjectsFromFavoritesFolder(
        @WebParam(name = "objectClass", targetNamespace = "")
        List<String> objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        List<Long> objectId,
        @WebParam(name = "favoritesFolderId", targetNamespace = "")
        long favoritesFolderId,
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param favoritesFolderId
     * @param limit
     * @param sessionId
     * @param userId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObjectsInFavoritesFolder", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectsInFavoritesFolder")
    @ResponseWrapper(localName = "getObjectsInFavoritesFolderResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectsInFavoritesFolderResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectsInFavoritesFolderRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectsInFavoritesFolderResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObjectsInFavoritesFolder/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getObjectsInFavoritesFolder(
        @WebParam(name = "favoritesFolderId", targetNamespace = "")
        long favoritesFolderId,
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "limit", targetNamespace = "")
        int limit,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param sessionId
     * @param userId
     * @param objectId
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteFavoritesFolder>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFavoritesFoldersForObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetFavoritesFoldersForObject")
    @ResponseWrapper(localName = "getFavoritesFoldersForObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetFavoritesFoldersForObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFoldersForObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFoldersForObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFoldersForObject/Fault/ServerSideException")
    })
    public List<RemoteFavoritesFolder> getFavoritesFoldersForObject(
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "objectId", targetNamespace = "")
        long objectId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param favoritesFolderId
     * @param sessionId
     * @param userId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteFavoritesFolder
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFavoritesFolder", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetFavoritesFolder")
    @ResponseWrapper(localName = "getFavoritesFolderResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetFavoritesFolderResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFolderRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFolderResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getFavoritesFolder/Fault/ServerSideException")
    })
    public RemoteFavoritesFolder getFavoritesFolder(
        @WebParam(name = "favoritesFolderId", targetNamespace = "")
        long favoritesFolderId,
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param favoritesFolderId
     * @param favoritesFolderName
     * @param sessionId
     * @param userId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateFavoritesFolder", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateFavoritesFolder")
    @ResponseWrapper(localName = "updateFavoritesFolderResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.UpdateFavoritesFolderResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/updateFavoritesFolderRequest", output = "http://ws.kuwaiba.org/KuwaibaService/updateFavoritesFolderResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/updateFavoritesFolder/Fault/ServerSideException")
    })
    public void updateFavoritesFolder(
        @WebParam(name = "favoritesFolderId", targetNamespace = "")
        long favoritesFolderId,
        @WebParam(name = "favoritesFolderName", targetNamespace = "")
        String favoritesFolderName,
        @WebParam(name = "userId", targetNamespace = "")
        long userId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param ruleScope
     * @param ruleType
     * @param ruleVersion
     * @param ruleName
     * @param appliesTo
     * @param sessionId
     * @param constraints
     * @param ruleDescription
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createBusinessRule", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateBusinessRule")
    @ResponseWrapper(localName = "createBusinessRuleResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateBusinessRuleResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createBusinessRuleRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createBusinessRuleResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createBusinessRule/Fault/ServerSideException")
    })
    public long createBusinessRule(
        @WebParam(name = "ruleName", targetNamespace = "")
        String ruleName,
        @WebParam(name = "ruleDescription", targetNamespace = "")
        String ruleDescription,
        @WebParam(name = "ruleType", targetNamespace = "")
        int ruleType,
        @WebParam(name = "ruleScope", targetNamespace = "")
        int ruleScope,
        @WebParam(name = "appliesTo", targetNamespace = "")
        String appliesTo,
        @WebParam(name = "ruleVersion", targetNamespace = "")
        String ruleVersion,
        @WebParam(name = "constraints", targetNamespace = "")
        List<String> constraints,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param businessRuleId
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteBusinessRule", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteBusinessRule")
    @ResponseWrapper(localName = "deleteBusinessRuleResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteBusinessRuleResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteBusinessRuleRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteBusinessRuleResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteBusinessRule/Fault/ServerSideException")
    })
    public void deleteBusinessRule(
        @WebParam(name = "businessRuleId", targetNamespace = "")
        long businessRuleId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteBusinessRule>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBusinessRules", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetBusinessRules")
    @ResponseWrapper(localName = "getBusinessRulesResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetBusinessRulesResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getBusinessRulesRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getBusinessRulesResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getBusinessRules/Fault/ServerSideException")
    })
    public List<RemoteBusinessRule> getBusinessRules(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classId
     * @param attributeName
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.AttributeInfo
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAttributeForClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetAttributeForClassWithId")
    @ResponseWrapper(localName = "getAttributeForClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetAttributeForClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getAttributeForClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getAttributeForClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getAttributeForClassWithId/Fault/ServerSideException")
    })
    public AttributeInfo getAttributeForClassWithId(
        @WebParam(name = "classId", targetNamespace = "")
        String classId,
        @WebParam(name = "attributeName", targetNamespace = "")
        String attributeName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classId
     * @param visible
     * @param displayName
     * @param administrative
     * @param noCopy
     * @param unique
     * @param name
     * @param description
     * @param readOnly
     * @param sessionId
     * @param type
     * @param mandatory
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "createAttributeForClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateAttributeForClassWithId")
    @ResponseWrapper(localName = "createAttributeForClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateAttributeForClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createAttributeForClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createAttributeForClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createAttributeForClassWithId/Fault/ServerSideException")
    })
    public void createAttributeForClassWithId(
        @WebParam(name = "classId", targetNamespace = "")
        long classId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "displayName", targetNamespace = "")
        String displayName,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "administrative", targetNamespace = "")
        boolean administrative,
        @WebParam(name = "visible", targetNamespace = "")
        boolean visible,
        @WebParam(name = "readOnly", targetNamespace = "")
        boolean readOnly,
        @WebParam(name = "noCopy", targetNamespace = "")
        boolean noCopy,
        @WebParam(name = "unique", targetNamespace = "")
        boolean unique,
        @WebParam(name = "mandatory", targetNamespace = "")
        boolean mandatory,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param visible
     * @param displayName
     * @param noCopy
     * @param description
     * @param readOnly
     * @param sessionId
     * @param type
     * @param mandatory
     * @param attributeId
     * @param classId
     * @param administrative
     * @param unique
     * @param name
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "setAttributePropertiesForClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetAttributePropertiesForClassWithId")
    @ResponseWrapper(localName = "setAttributePropertiesForClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.SetAttributePropertiesForClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/setAttributePropertiesForClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/setAttributePropertiesForClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/setAttributePropertiesForClassWithId/Fault/ServerSideException")
    })
    public void setAttributePropertiesForClassWithId(
        @WebParam(name = "classId", targetNamespace = "")
        long classId,
        @WebParam(name = "attributeId", targetNamespace = "")
        long attributeId,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "displayName", targetNamespace = "")
        String displayName,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "administrative", targetNamespace = "")
        Boolean administrative,
        @WebParam(name = "mandatory", targetNamespace = "")
        Boolean mandatory,
        @WebParam(name = "noCopy", targetNamespace = "")
        Boolean noCopy,
        @WebParam(name = "readOnly", targetNamespace = "")
        Boolean readOnly,
        @WebParam(name = "unique", targetNamespace = "")
        Boolean unique,
        @WebParam(name = "visible", targetNamespace = "")
        Boolean visible,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classId
     * @param attributeName
     * @param sessionId
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteAttributeForClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteAttributeForClassWithId")
    @ResponseWrapper(localName = "deleteAttributeForClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.DeleteAttributeForClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/deleteAttributeForClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/deleteAttributeForClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/deleteAttributeForClassWithId/Fault/ServerSideException")
    })
    public void deleteAttributeForClassWithId(
        @WebParam(name = "classId", targetNamespace = "")
        long classId,
        @WebParam(name = "attributeName", targetNamespace = "")
        String attributeName,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param classId
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.ClassInfo
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClassWithId", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetClassWithId")
    @ResponseWrapper(localName = "getClassWithIdResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetClassWithIdResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getClassWithIdRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getClassWithIdResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getClassWithId/Fault/ServerSideException")
    })
    public ClassInfo getClassWithId(
        @WebParam(name = "classId", targetNamespace = "")
        long classId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param sessionId
     * @param taskId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteTask
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTask", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTask")
    @ResponseWrapper(localName = "getTaskResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetTaskResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getTaskRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getTaskResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getTask/Fault/ServerSideException")
    })
    public RemoteTask getTask(
        @WebParam(name = "taskId", targetNamespace = "")
        long taskId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param templateOids
     * @param targetClass
     * @param targetOid
     * @param sessionId
     * @param templateClases
     * @param recursive
     * @return
     *     returns java.util.List<java.lang.Long>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "copyObjects", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CopyObjects")
    @ResponseWrapper(localName = "copyObjectsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CopyObjectsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/copyObjectsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/copyObjectsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/copyObjects/Fault/ServerSideException")
    })
    public List<Long> copyObjects(
        @WebParam(name = "targetClass", targetNamespace = "")
        String targetClass,
        @WebParam(name = "targetOid", targetNamespace = "")
        long targetOid,
        @WebParam(name = "templateClases", targetNamespace = "")
        List<String> templateClases,
        @WebParam(name = "templateOids", targetNamespace = "")
        List<Long> templateOids,
        @WebParam(name = "recursive", targetNamespace = "")
        boolean recursive,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param className
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.ClassInfo
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getClass", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetClass")
    @ResponseWrapper(localName = "getClassResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetClassResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getClassRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getClassResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getClass/Fault/ServerSideException")
    })
    public ClassInfo getClass(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param objectClass
     * @param oid
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteObject
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObject")
    @ResponseWrapper(localName = "getObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getObject/Fault/ServerSideException")
    })
    public RemoteObject getObject(
        @WebParam(name = "objectClass", targetNamespace = "")
        String objectClass,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param oid
     * @param sessionId
     * @param objectclass
     * @return
     *     returns org.inventory.communications.wsclient.RemoteObjectLight
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getParent", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetParent")
    @ResponseWrapper(localName = "getParentResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetParentResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getParentRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getParentResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getParent/Fault/ServerSideException")
    })
    public RemoteObjectLight getParent(
        @WebParam(name = "objectclass", targetNamespace = "")
        String objectclass,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param queryOid
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemoteQuery
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQuery", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetQuery")
    @ResponseWrapper(localName = "getQueryResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetQueryResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getQueryRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getQueryResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getQuery/Fault/ServerSideException")
    })
    public RemoteQuery getQuery(
        @WebParam(name = "queryOid", targetNamespace = "")
        long queryOid,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param poolId
     * @param sessionId
     * @return
     *     returns org.inventory.communications.wsclient.RemotePool
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPool", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPool")
    @ResponseWrapper(localName = "getPoolResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetPoolResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getPoolRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getPoolResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getPool/Fault/ServerSideException")
    })
    public RemotePool getPool(
        @WebParam(name = "poolId", targetNamespace = "")
        long poolId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param parentObjectClassName
     * @param attributeNames
     * @param parentOid
     * @param attributeValues
     * @param className
     * @param sessionId
     * @param templateId
     * @return
     *     returns long
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createObject", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateObject")
    @ResponseWrapper(localName = "createObjectResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.CreateObjectResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/createObjectRequest", output = "http://ws.kuwaiba.org/KuwaibaService/createObjectResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/createObject/Fault/ServerSideException")
    })
    public long createObject(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "parentObjectClassName", targetNamespace = "")
        String parentObjectClassName,
        @WebParam(name = "parentOid", targetNamespace = "")
        long parentOid,
        @WebParam(name = "attributeNames", targetNamespace = "")
        List<String> attributeNames,
        @WebParam(name = "attributeValues", targetNamespace = "")
        List<String> attributeValues,
        @WebParam(name = "templateId", targetNamespace = "")
        long templateId,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param oid
     * @param sessionId
     * @param objectclass
     * @return
     *     returns java.util.List<org.inventory.communications.wsclient.RemoteObjectLight>
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getParents", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetParents")
    @ResponseWrapper(localName = "getParentsResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.GetParentsResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/getParentsRequest", output = "http://ws.kuwaiba.org/KuwaibaService/getParentsResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/getParents/Fault/ServerSideException")
    })
    public List<RemoteObjectLight> getParents(
        @WebParam(name = "objectclass", targetNamespace = "")
        String objectclass,
        @WebParam(name = "oid", targetNamespace = "")
        long oid,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

    /**
     * 
     * @param allegedParentClass
     * @param className
     * @param sessionId
     * @return
     *     returns boolean
     * @throws ServerSideException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isSubclassOf", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.IsSubclassOf")
    @ResponseWrapper(localName = "isSubclassOfResponse", targetNamespace = "http://ws.kuwaiba.org/", className = "org.inventory.communications.wsclient.IsSubclassOfResponse")
    @Action(input = "http://ws.kuwaiba.org/KuwaibaService/isSubclassOfRequest", output = "http://ws.kuwaiba.org/KuwaibaService/isSubclassOfResponse", fault = {
        @FaultAction(className = ServerSideException_Exception.class, value = "http://ws.kuwaiba.org/KuwaibaService/isSubclassOf/Fault/ServerSideException")
    })
    public boolean isSubclassOf(
        @WebParam(name = "className", targetNamespace = "")
        String className,
        @WebParam(name = "allegedParentClass", targetNamespace = "")
        String allegedParentClass,
        @WebParam(name = "sessionId", targetNamespace = "")
        String sessionId)
        throws ServerSideException_Exception
    ;

}
